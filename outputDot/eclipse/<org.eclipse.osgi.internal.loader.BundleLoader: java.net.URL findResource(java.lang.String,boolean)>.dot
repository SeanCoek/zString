digraph g {
0[label="specialinvoke r0.<org.eclipse.osgi.internal.loader.BundleLoader: org.eclipse.osgi.internal.loader.PackageSource findRequiredSource(java.lang.String,org.eclipse.osgi.framework.util.KeyedHashSet)>(r1, null)"]
1[label="r23"]
0->1[label=""]
2[label="@caughtexception"]
3[label="$r14"]
2->3[label=""]
4[label="@this: org.eclipse.osgi.internal.loader.BundleLoader"]
5[label="r0"]
4->5[label=""]
6[label="specialinvoke r0.<org.eclipse.osgi.internal.loader.BundleLoader: java.lang.Object searchHooks(java.lang.String,int)>(r18, 4)"]
7[label="$r8"]
6->7[label=""]
8[label="(java.net.URL) $r8"]
9[label="r20"]
8->9[label=""]
10[label="@caughtexception"]
11[label="$r15"]
10->11[label=""]
12[label="specialinvoke r0.<org.eclipse.osgi.internal.loader.BundleLoader: java.lang.Object searchHooks(java.lang.String,int)>(r18, 3)"]
13[label="$r21"]
12->13[label=""]
14[label="specialinvoke r0.<org.eclipse.osgi.internal.loader.BundleLoader: boolean isRequestFromVM()>()"]
15[label="$z1"]
14->15[label=""]
16[label="staticinvoke <org.eclipse.osgi.internal.loader.BundleLoader: java.lang.String getResourcePackageName(java.lang.String)>(r18)"]
17[label="r1"]
16->17[label=""]
18[label="@caughtexception"]
19[label="$r16"]
18->19[label=""]
20[label="1"]
21[label="z5"]
20->21[label=""]
22[label="@caughtexception"]
23[label="$r17"]
22->23[label=""]
24[label="@parameter1: boolean"]
25[label="z0"]
24->25[label=""]
26[label="0"]
26->21[label=""]
27[label="specialinvoke r0.<org.eclipse.osgi.internal.loader.BundleLoader: org.eclipse.osgi.internal.loader.PackageSource findImportedSource(java.lang.String,org.eclipse.osgi.framework.util.KeyedHashSet)>(r1, null)"]
28[label="r22"]
27->28[label=""]
29[label="specialinvoke r0.<org.eclipse.osgi.internal.loader.BundleLoader: org.eclipse.osgi.internal.loader.PackageSource findDynamicSource(java.lang.String)>(r1)"]
30[label="r24"]
29->30[label=""]
31[label="@parameter0: java.lang.String"]
32[label="r18"]
31->32[label=""]
33[label="null"]
33->9[label=""]
34[label="(java.net.URL) $r21"]
34->9[label=""]
}