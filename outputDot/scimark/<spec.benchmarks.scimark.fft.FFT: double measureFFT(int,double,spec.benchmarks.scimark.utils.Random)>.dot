digraph g {
5[label="double stop()"]
16[label="int log2(int)"]
15[label="void bitreverse(double[])"]
9[label="void <init>()"]
0[label="double measureFFT(int,double,spec.benchmarks.scimark.utils.Random)"]
1[label="double read()"]
14[label="void transform_internal(double[],int)"]
11[label="double nextDouble()"]
4[label="double test(double[])"]
10[label="double[] RandomizeVector(double[],spec.benchmarks.scimark.utils.Random)"]
13[label="double seconds()"]
3[label="void checkResults(java.lang.String,java.lang.String,int)"]
8[label="void start()"]
12[label="void reset()"]
2[label="double num_flops(int)"]
6[label="void inverse(double[])"]
7[label="void transform(double[])"]
0->1[label="virtualinvoke r2.<spec.benchmarks.scimark.utils.Stopwatch: double read()>()"]
0->2[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: double num_flops(int)>(i0)"]
0->3[label="staticinvoke <spec.benchmarks.scimark.utils.kernel: void checkResults(java.lang.String,java.lang.String,int)>($r7, $r10, $i2)"]
0->4[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: double test(double[])>(r13)"]
0->5[label="virtualinvoke r2.<spec.benchmarks.scimark.utils.Stopwatch: double stop()>()"]
0->6[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void inverse(double[])>(r13)"]
0->7[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform(double[])>(r13)"]
0->8[label="virtualinvoke r2.<spec.benchmarks.scimark.utils.Stopwatch: void start()>()"]
0->9[label="specialinvoke $r5.<spec.benchmarks.scimark.utils.Stopwatch: void <init>()>()"]
14->15[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void bitreverse(double[])>(r1)"]
4->6[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void inverse(double[])>(r1)"]
4->7[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform(double[])>(r1)"]
10->11[label="virtualinvoke r1.<spec.benchmarks.scimark.utils.Random: double nextDouble()>()"]
14->16[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: int log2(int)>(i1)"]
9->12[label="virtualinvoke r0.<spec.benchmarks.scimark.utils.Stopwatch: void reset()>()"]
2->16[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: int log2(int)>(i0)"]
1->13[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
1->13[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
8->13[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
6->14[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform_internal(double[],int)>(r1, 1)"]
0->10[label="staticinvoke <spec.benchmarks.scimark.utils.kernel: double[] RandomizeVector(double[],spec.benchmarks.scimark.utils.Random)>(r12, r1)"]
7->14[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform_internal(double[],int)>(r1, -1)"]
5->13[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
}