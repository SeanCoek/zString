digraph g {
3[label="void initialize(int)"]
6[label="double stop()"]
9[label="void <init>()"]
4[label="double read()"]
7[label="double integrate(int)"]
12[label="double nextDouble()"]
11[label="double seconds()"]
8[label="void start()"]
10[label="void reset()"]
1[label="double measureMonteCarlo(double,spec.benchmarks.scimark.utils.Random)"]
2[label="void <init>(int)"]
5[label="double num_flops(int)"]
0[label="void run()"]
0->1[label="virtualinvoke r0.<spec.benchmarks.scimark.monte_carlo.MonteCarlo: double measureMonteCarlo(double,spec.benchmarks.scimark.utils.Random)>(d0, r1)"]
0->2[label="specialinvoke $r2.<spec.benchmarks.scimark.utils.Random: void <init>(int)>(101010)"]
2->3[label="specialinvoke r0.<spec.benchmarks.scimark.utils.Random: void initialize(int)>(i0)"]
1->4[label="virtualinvoke r3.<spec.benchmarks.scimark.utils.Stopwatch: double read()>()"]
1->5[label="virtualinvoke r0.<spec.benchmarks.scimark.monte_carlo.MonteCarlo: double num_flops(int)>(i0)"]
1->6[label="virtualinvoke r3.<spec.benchmarks.scimark.utils.Stopwatch: double stop()>()"]
1->7[label="virtualinvoke r0.<spec.benchmarks.scimark.monte_carlo.MonteCarlo: double integrate(int)>(i0)"]
1->8[label="virtualinvoke r3.<spec.benchmarks.scimark.utils.Stopwatch: void start()>()"]
7->2[label="specialinvoke $r2.<spec.benchmarks.scimark.utils.Random: void <init>(int)>(113)"]
1->9[label="specialinvoke $r4.<spec.benchmarks.scimark.utils.Stopwatch: void <init>()>()"]
8->11[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
9->10[label="virtualinvoke r0.<spec.benchmarks.scimark.utils.Stopwatch: void reset()>()"]
7->12[label="virtualinvoke r1.<spec.benchmarks.scimark.utils.Random: double nextDouble()>()"]
7->12[label="virtualinvoke r1.<spec.benchmarks.scimark.utils.Random: double nextDouble()>()"]
6->11[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
4->11[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
4->11[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
}