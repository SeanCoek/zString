digraph g {
5[label="void initialize(int)"]
11[label="double stop()"]
17[label="int log2(int)"]
19[label="void bitreverse(double[])"]
2[label="void <init>(int)"]
7[label="void <init>()"]
3[label="double measureFFT(int,double,spec.benchmarks.scimark.utils.Random)"]
0[label="void main(int)"]
1[label="void run()"]
15[label="double read()"]
18[label="void transform_internal(double[],int)"]
21[label="double nextDouble()"]
6[label="double[] RandomizeVector(double[],spec.benchmarks.scimark.utils.Random)"]
12[label="double test(double[])"]
16[label="double seconds()"]
8[label="void start()"]
13[label="void checkResults(java.lang.String,java.lang.String,int)"]
20[label="void reset()"]
14[label="double num_flops(int)"]
10[label="void inverse(double[])"]
4[label="void <init>(int)"]
9[label="void transform(double[])"]
3->12[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: double test(double[])>(r13)"]
3->13[label="staticinvoke <spec.benchmarks.scimark.utils.kernel: void checkResults(java.lang.String,java.lang.String,int)>($r7, $r10, $i2)"]
3->14[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: double num_flops(int)>(i0)"]
12->10[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void inverse(double[])>(r1)"]
9->18[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform_internal(double[],int)>(r1, -1)"]
3->15[label="virtualinvoke r2.<spec.benchmarks.scimark.utils.Stopwatch: double read()>()"]
18->17[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: int log2(int)>(i1)"]
14->17[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: int log2(int)>(i0)"]
18->19[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void bitreverse(double[])>(r1)"]
6->21[label="virtualinvoke r1.<spec.benchmarks.scimark.utils.Random: double nextDouble()>()"]
3->10[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void inverse(double[])>(r13)"]
3->11[label="virtualinvoke r2.<spec.benchmarks.scimark.utils.Stopwatch: double stop()>()"]
0->1[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void run()>()"]
0->2[label="specialinvoke $r1.<spec.benchmarks.scimark.fft.FFT: void <init>(int)>(i0)"]
1->3[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: double measureFFT(int,double,spec.benchmarks.scimark.utils.Random)>(i0, d0, r1)"]
1->4[label="specialinvoke $r2.<spec.benchmarks.scimark.utils.Random: void <init>(int)>(101010)"]
10->18[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform_internal(double[],int)>(r1, 1)"]
4->5[label="specialinvoke r0.<spec.benchmarks.scimark.utils.Random: void initialize(int)>(i0)"]
3->6[label="staticinvoke <spec.benchmarks.scimark.utils.kernel: double[] RandomizeVector(double[],spec.benchmarks.scimark.utils.Random)>(r12, r1)"]
3->7[label="specialinvoke $r5.<spec.benchmarks.scimark.utils.Stopwatch: void <init>()>()"]
15->16[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
15->16[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
3->8[label="virtualinvoke r2.<spec.benchmarks.scimark.utils.Stopwatch: void start()>()"]
3->9[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform(double[])>(r13)"]
11->16[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
12->9[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform(double[])>(r1)"]
7->20[label="virtualinvoke r0.<spec.benchmarks.scimark.utils.Stopwatch: void reset()>()"]
8->16[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
}