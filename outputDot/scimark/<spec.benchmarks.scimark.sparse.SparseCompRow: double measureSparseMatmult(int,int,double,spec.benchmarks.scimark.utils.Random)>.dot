digraph g {
11[label="double nextDouble()"]
8[label="double seconds()"]
3[label="void start()"]
9[label="void checkResults(java.lang.String,java.lang.String,int)"]
5[label="double stop()"]
10[label="void reset()"]
1[label="double[] RandomVector(int,spec.benchmarks.scimark.utils.Random)"]
2[label="void <init>()"]
0[label="double measureSparseMatmult(int,int,double,spec.benchmarks.scimark.utils.Random)"]
4[label="void matmult(double[],double[],int[],int[],double[],int,int)"]
6[label="double num_flops(int,int,int)"]
7[label="double read()"]
0->1[label="staticinvoke <spec.benchmarks.scimark.utils.kernel: double[] RandomVector(int,spec.benchmarks.scimark.utils.Random)>(i3, r1)"]
0->1[label="staticinvoke <spec.benchmarks.scimark.utils.kernel: double[] RandomVector(int,spec.benchmarks.scimark.utils.Random)>(i0, r1)"]
0->2[label="specialinvoke $r7.<spec.benchmarks.scimark.utils.Stopwatch: void <init>()>()"]
0->3[label="virtualinvoke r8.<spec.benchmarks.scimark.utils.Stopwatch: void start()>()"]
0->4[label="virtualinvoke r0.<spec.benchmarks.scimark.sparse.SparseCompRow: void matmult(double[],double[],int[],int[],double[],int,int)>(r3, r4, r6, r5, r2, s13, b14)"]
0->5[label="virtualinvoke r8.<spec.benchmarks.scimark.utils.Stopwatch: double stop()>()"]
0->6[label="virtualinvoke r0.<spec.benchmarks.scimark.sparse.SparseCompRow: double num_flops(int,int,int)>(i0, i1, s13)"]
0->7[label="virtualinvoke r8.<spec.benchmarks.scimark.utils.Stopwatch: double read()>()"]
2->10[label="virtualinvoke r0.<spec.benchmarks.scimark.utils.Stopwatch: void reset()>()"]
3->8[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
5->8[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
4->9[label="staticinvoke <spec.benchmarks.scimark.utils.kernel: void checkResults(java.lang.String,java.lang.String,int)>($r7, $r10, $i7)"]
7->8[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
7->8[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
1->11[label="virtualinvoke r0.<spec.benchmarks.scimark.utils.Random: double nextDouble()>()"]
}