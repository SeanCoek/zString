digraph g {
19[label="void initialize(int)"]
8[label="double stop()"]
14[label="int log2(int)"]
16[label="void bitreverse(double[])"]
4[label="void <init>()"]
2[label="double measureFFT(int,double,spec.benchmarks.scimark.utils.Random)"]
0[label="void run()"]
12[label="double read()"]
15[label="void transform_internal(double[],int)"]
18[label="double nextDouble()"]
3[label="double[] RandomizeVector(double[],spec.benchmarks.scimark.utils.Random)"]
9[label="double test(double[])"]
13[label="double seconds()"]
5[label="void start()"]
10[label="void checkResults(java.lang.String,java.lang.String,int)"]
17[label="void reset()"]
11[label="double num_flops(int)"]
7[label="void inverse(double[])"]
1[label="void <init>(int)"]
6[label="void transform(double[])"]
1->19[label="specialinvoke r0.<spec.benchmarks.scimark.utils.Random: void initialize(int)>(i0)"]
12->13[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
12->13[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
3->18[label="virtualinvoke r1.<spec.benchmarks.scimark.utils.Random: double nextDouble()>()"]
7->15[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform_internal(double[],int)>(r1, 1)"]
5->13[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
0->1[label="specialinvoke $r2.<spec.benchmarks.scimark.utils.Random: void <init>(int)>(101010)"]
0->2[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: double measureFFT(int,double,spec.benchmarks.scimark.utils.Random)>(i0, d0, r1)"]
2->3[label="staticinvoke <spec.benchmarks.scimark.utils.kernel: double[] RandomizeVector(double[],spec.benchmarks.scimark.utils.Random)>(r12, r1)"]
2->4[label="specialinvoke $r5.<spec.benchmarks.scimark.utils.Stopwatch: void <init>()>()"]
2->5[label="virtualinvoke r2.<spec.benchmarks.scimark.utils.Stopwatch: void start()>()"]
2->6[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform(double[])>(r13)"]
2->7[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void inverse(double[])>(r13)"]
2->8[label="virtualinvoke r2.<spec.benchmarks.scimark.utils.Stopwatch: double stop()>()"]
2->10[label="staticinvoke <spec.benchmarks.scimark.utils.kernel: void checkResults(java.lang.String,java.lang.String,int)>($r7, $r10, $i2)"]
15->16[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void bitreverse(double[])>(r1)"]
2->9[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: double test(double[])>(r13)"]
6->15[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform_internal(double[],int)>(r1, -1)"]
15->14[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: int log2(int)>(i1)"]
11->14[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: int log2(int)>(i0)"]
4->17[label="virtualinvoke r0.<spec.benchmarks.scimark.utils.Stopwatch: void reset()>()"]
9->6[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void transform(double[])>(r1)"]
9->7[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: void inverse(double[])>(r1)"]
2->12[label="virtualinvoke r2.<spec.benchmarks.scimark.utils.Stopwatch: double read()>()"]
8->13[label="staticinvoke <spec.benchmarks.scimark.utils.Stopwatch: double seconds()>()"]
2->11[label="virtualinvoke r0.<spec.benchmarks.scimark.fft.FFT: double num_flops(int)>(i0)"]
}