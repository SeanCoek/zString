digraph g {
7[label="void clear(int)"]
0[label="void <init>(spec.benchmarks.compress.InputBuffer,spec.benchmarks.compress.OutputBuffer)"]
8[label="void init(int)"]
1[label="void <init>(spec.benchmarks.compress.InputBuffer,spec.benchmarks.compress.OutputBuffer)"]
6[label="void <init>()"]
2[label="int readByte()"]
4[label="void <init>()"]
3[label="int getMaxCode()"]
5[label="void <init>()"]
0->1[label="specialinvoke r0.<spec.benchmarks.compress.CompBase: void <init>(spec.benchmarks.compress.InputBuffer,spec.benchmarks.compress.OutputBuffer)>(r1, r2)"]
0->2[label="virtualinvoke $r22.<spec.benchmarks.compress.InputBuffer: int readByte()>()"]
0->2[label="virtualinvoke $r20.<spec.benchmarks.compress.InputBuffer: int readByte()>()"]
0->2[label="virtualinvoke $r3.<spec.benchmarks.compress.InputBuffer: int readByte()>()"]
0->3[label="virtualinvoke r0.<spec.benchmarks.compress.Decompressor: int getMaxCode()>()"]
0->4[label="specialinvoke $r6.<spec.benchmarks.compress.CodeTable: void <init>()>()"]
0->5[label="specialinvoke $r7.<spec.benchmarks.compress.Decompressor$SuffixTable: void <init>()>()"]
0->6[label="specialinvoke $r8.<spec.benchmarks.compress.Decompressor$DeStack: void <init>()>()"]
0->7[label="virtualinvoke $r9.<spec.benchmarks.compress.CodeTable: void clear(int)>(256)"]
0->8[label="virtualinvoke $r10.<spec.benchmarks.compress.Decompressor$SuffixTable: void init(int)>(256)"]
}