digraph g {
7[label="void set(int,int)"]
9[label="void clBlock()"]
8[label="void set(int,int)"]
0[label="void compress()"]
1[label="int readByte()"]
10[label="void writebytes(byte[],int)"]
6[label="void output(int)"]
3[label="void clear()"]
4[label="int of(int)"]
2[label="int hsize()"]
5[label="int of(int)"]
12[label="void writeByte(byte)"]
11[label="int getMaxCode()"]
0->1[label="virtualinvoke $r1.<spec.benchmarks.compress.InputBuffer: int readByte()>()"]
0->1[label="virtualinvoke $r12.<spec.benchmarks.compress.InputBuffer: int readByte()>()"]
0->2[label="virtualinvoke $r2.<spec.benchmarks.compress.Compressor$HashTable: int hsize()>()"]
0->2[label="virtualinvoke $r3.<spec.benchmarks.compress.Compressor$HashTable: int hsize()>()"]
0->3[label="virtualinvoke $r4.<spec.benchmarks.compress.Compressor$HashTable: void clear()>()"]
0->4[label="virtualinvoke $r5.<spec.benchmarks.compress.Compressor$HashTable: int of(int)>(i24)"]
0->4[label="virtualinvoke $r8.<spec.benchmarks.compress.Compressor$HashTable: int of(int)>(i24)"]
0->5[label="virtualinvoke $r10.<spec.benchmarks.compress.CodeTable: int of(int)>(i24)"]
0->5[label="virtualinvoke $r11.<spec.benchmarks.compress.CodeTable: int of(int)>(i24)"]
0->6[label="specialinvoke r0.<spec.benchmarks.compress.Compressor: void output(int)>(-1)"]
0->6[label="specialinvoke r0.<spec.benchmarks.compress.Compressor: void output(int)>(i19)"]
0->6[label="specialinvoke r0.<spec.benchmarks.compress.Compressor: void output(int)>(i19)"]
0->7[label="virtualinvoke $r6.<spec.benchmarks.compress.CodeTable: void set(int,int)>(i24, $i16)"]
0->8[label="virtualinvoke $r7.<spec.benchmarks.compress.Compressor$HashTable: void set(int,int)>(i24, i23)"]
0->9[label="specialinvoke r0.<spec.benchmarks.compress.Compressor: void clBlock()>()"]
9->3[label="virtualinvoke $r1.<spec.benchmarks.compress.Compressor$HashTable: void clear()>()"]
9->6[label="specialinvoke r0.<spec.benchmarks.compress.Compressor: void output(int)>(256)"]
6->10[label="virtualinvoke $r9.<spec.benchmarks.compress.OutputBuffer: void writebytes(byte[],int)>($r8, $i37)"]
6->10[label="virtualinvoke $r2.<spec.benchmarks.compress.OutputBuffer: void writebytes(byte[],int)>($r1, $i8)"]
6->12[label="virtualinvoke $r11.<spec.benchmarks.compress.OutputBuffer: void writeByte(byte)>($b45)"]
6->11[label="virtualinvoke r0.<spec.benchmarks.compress.Compressor: int getMaxCode()>()"]
6->11[label="virtualinvoke r0.<spec.benchmarks.compress.Compressor: int getMaxCode()>()"]
}