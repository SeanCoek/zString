digraph g {
0[label="void decompress()"]
5[label="byte pop()"]
10[label="void clear(int)"]
2[label="void set(int,int)"]
11[label="int readBytes(byte[],int)"]
3[label="boolean isEmpty()"]
9[label="int getCode()"]
6[label="void push(byte)"]
7[label="byte of(int)"]
1[label="void set(int,byte)"]
4[label="void writeByte(byte)"]
8[label="int of(int)"]
12[label="int getMaxCode()"]
0->1[label="virtualinvoke $r8.<spec.benchmarks.compress.Decompressor$SuffixTable: void set(int,byte)>(i19, $b9)"]
0->2[label="virtualinvoke $r7.<spec.benchmarks.compress.CodeTable: void set(int,int)>(i19, i15)"]
9->12[label="virtualinvoke r0.<spec.benchmarks.compress.Decompressor: int getMaxCode()>()"]
9->12[label="virtualinvoke r0.<spec.benchmarks.compress.Decompressor: int getMaxCode()>()"]
0->3[label="virtualinvoke $r6.<spec.benchmarks.compress.Decompressor$DeStack: boolean isEmpty()>()"]
0->4[label="virtualinvoke $r1.<spec.benchmarks.compress.OutputBuffer: void writeByte(byte)>($b2)"]
0->4[label="virtualinvoke $r5.<spec.benchmarks.compress.OutputBuffer: void writeByte(byte)>($b6)"]
0->5[label="virtualinvoke $r4.<spec.benchmarks.compress.Decompressor$DeStack: byte pop()>()"]
9->11[label="virtualinvoke $r2.<spec.benchmarks.compress.InputBuffer: int readBytes(byte[],int)>($r1, $i1)"]
0->6[label="virtualinvoke $r3.<spec.benchmarks.compress.Decompressor$DeStack: void push(byte)>($b5)"]
0->6[label="virtualinvoke $r12.<spec.benchmarks.compress.Decompressor$DeStack: void push(byte)>($b12)"]
0->6[label="virtualinvoke $r10.<spec.benchmarks.compress.Decompressor$DeStack: void push(byte)>($b11)"]
0->7[label="virtualinvoke $r9.<spec.benchmarks.compress.Decompressor$SuffixTable: byte of(int)>(i17)"]
0->7[label="virtualinvoke $r2.<spec.benchmarks.compress.Decompressor$SuffixTable: byte of(int)>(i17)"]
0->8[label="virtualinvoke $r11.<spec.benchmarks.compress.CodeTable: int of(int)>(i17)"]
0->9[label="specialinvoke r0.<spec.benchmarks.compress.Decompressor: int getCode()>()"]
0->9[label="specialinvoke r0.<spec.benchmarks.compress.Decompressor: int getCode()>()"]
0->9[label="specialinvoke r0.<spec.benchmarks.compress.Decompressor: int getCode()>()"]
0->10[label="virtualinvoke $r13.<spec.benchmarks.compress.CodeTable: void clear(int)>(256)"]
}