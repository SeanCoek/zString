digraph g {
0[label="void <init>(spec.benchmarks.compress.InputBuffer,spec.benchmarks.compress.OutputBuffer)"]
5[label="void <init>(spec.benchmarks.compress.InputBuffer,spec.benchmarks.compress.OutputBuffer)"]
2[label="void <init>()"]
3[label="void <init>()"]
1[label="void writeByte(byte)"]
4[label="int getMaxCode()"]
0->1[label="virtualinvoke $r9.<spec.benchmarks.compress.OutputBuffer: void writeByte(byte)>($b11)"]
0->1[label="virtualinvoke $r6.<spec.benchmarks.compress.OutputBuffer: void writeByte(byte)>($b6)"]
0->1[label="virtualinvoke $r8.<spec.benchmarks.compress.OutputBuffer: void writeByte(byte)>($b7)"]
0->2[label="specialinvoke $r4.<spec.benchmarks.compress.CodeTable: void <init>()>()"]
0->3[label="specialinvoke $r3.<spec.benchmarks.compress.Compressor$HashTable: void <init>()>()"]
0->4[label="virtualinvoke r0.<spec.benchmarks.compress.Compressor: int getMaxCode()>()"]
0->5[label="specialinvoke r0.<spec.benchmarks.compress.CompBase: void <init>(spec.benchmarks.compress.InputBuffer,spec.benchmarks.compress.OutputBuffer)>(r1, r2)"]
}