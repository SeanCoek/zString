0::<spec.harness.ProgramRunner: void <init>(spec.harness.results.BenchmarkResult,int)>
1::<spec.harness.ProgramRunner: void run()>
2::<spec.harness.ProgramRunner: boolean setupBenchmarkMethods()>
3::<spec.harness.ProgramRunner: spec.harness.SpecJVMBenchmarkBase createBmInstance(spec.harness.results.BenchmarkResult,int)>
4::<spec.harness.ProgramRunner: java.lang.String invokeBmTestTypeMethod()>
5::<spec.harness.ProgramRunner: void invokeBmSetupBenchmark()>
6::<spec.harness.ProgramRunner: void invokeBmSetupIteration()>
7::<spec.harness.ProgramRunner: void invokeBmTearDownIteration()>
8::<spec.harness.ProgramRunner: void invokeBmTearDownBenchmark()>
9::<spec.harness.ProgramRunner: boolean runBenchmark()>
10::<spec.harness.ProgramRunner: boolean runIteration(java.lang.String,spec.harness.results.IterationResult,spec.harness.results.BenchmarkResult)>
11::<spec.harness.ProgramRunner: java.lang.String getStackTraceAsString(java.lang.Throwable)>
12::<spec.harness.ProgramRunner: int getNoBmHarnessThreads(spec.harness.results.BenchmarkResult)>
13::<spec.harness.ProgramRunner: void pause(long)>
14::<spec.harness.ProgramRunner: void interruptProgramRunner()>
15::<spec.harness.ProgramRunner: void endOfMeasurementInterval(long)>
16::<spec.harness.ProgramRunner: void <clinit>()>
17::<spec.harness.analyzer.CallbackAnalyzerExample$NumberResult: void <init>(double,java.lang.String,java.lang.String)>
18::<spec.io.ValidityCheckOutputStream: void <init>(java.lang.String)>
19::<spec.io.ValidityCheckOutputStream: void write(int)>
20::<spec.io.ValidityCheckOutputStream: boolean validityCheck(spec.harness.results.LoopResult)>
21::<spec.io.ValidityCheckOutputStream: void validityCheck2(spec.harness.results.LoopResult)>
22::<spec.io.ValidityCheckOutputStream: void handleValidationFailure(spec.harness.results.LoopResult,int,java.lang.String,java.lang.String)>
23::<spec.io.ValidityCheckOutputStream: java.lang.String getValidityFileName(java.lang.String)>
24::<spec.io.ValidityCheckOutputStream: void createValidityFile()>
25::<spec.io.ValidityCheckOutputStream: void <clinit>()>
26::<spec.harness.SpecJVMBenchmarkBase: void <init>(spec.harness.results.BenchmarkResult,int)>
27::<spec.harness.SpecJVMBenchmarkBase: void runSimple(java.lang.Class,java.lang.String[])>
28::<spec.harness.Configuration: void <init>()>
29::<spec.harness.Configuration: void setupProp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
30::<spec.harness.Configuration: void setupProp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
31::<spec.harness.Configuration: void setupProp(java.lang.String,java.lang.String,java.lang.String)>
32::<spec.harness.Configuration: java.lang.String getFixedOperationsProp(java.lang.String)>
33::<spec.harness.Configuration: void setupProperties()>
34::<spec.harness.Configuration: void checkSetup(spec.harness.results.SuiteResult)>
35::<spec.harness.Configuration: void validateProperty(spec.harness.results.SuiteResult,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
36::<spec.harness.Configuration: java.util.Properties readProperties(java.lang.String)>
37::<spec.harness.Configuration: void addViolation(spec.harness.results.SuiteResult,java.lang.String,java.lang.String)>
38::<spec.harness.Configuration: void addConfigurationDetail(spec.harness.results.SuiteResult,java.lang.String,java.lang.String)>
39::<spec.harness.Configuration: boolean checkLauncher(java.lang.String)>
40::<spec.harness.Configuration: void setupReportInfo(spec.harness.results.SuiteResult,java.util.Properties)>
41::<spec.harness.analyzer.CallbackAnalyzerExample$TheNumberGenerator: void <init>()>
42::<spec.harness.analyzer.CallbackAnalyzerExample$TheNumberGenerator: void register(spec.harness.analyzer.CallbackAnalyzerExample)>
43::<spec.harness.analyzer.CallbackAnalyzerExample$TheNumberGenerator: void deregister(spec.harness.analyzer.CallbackAnalyzerExample)>
44::<spec.harness.analyzer.CallbackAnalyzerExample$TheNumberGenerator: void run()>
45::<spec.harness.analyzer.CallbackAnalyzerExample$TheNumberGenerator: void <clinit>()>
46::<spec.harness.analyzer.HeapMemoryFreeAnalyzer: void <init>()>
47::<spec.harness.analyzer.HeapMemoryFreeAnalyzer: void execute(long)>
48::<spec.harness.analyzer.TempSensor: void <init>(java.lang.String,int)>
49::<spec.harness.analyzer.TempSensor: int writeMeter(java.lang.String)>
50::<spec.harness.analyzer.TempSensor: java.lang.String readMeter()>
51::<spec.harness.analyzer.TempSensor: void endSocConnection()>
52::<spec.harness.analyzer.TempSensor: void startRun(int,int,int)>
53::<spec.harness.analyzer.TempSensor: void go()>
54::<spec.harness.analyzer.TempSensor: void stop()>
55::<spec.harness.analyzer.TempSensor: java.util.HashMap reportRun(java.lang.String)>
56::<spec.harness.analyzer.TempSensor: java.lang.Boolean sensorCompliant()>
57::<spec.harness.analyzer.TempSensor: java.lang.String sensorPtdVersion()>
58::<spec.harness.analyzer.TempSensor: java.lang.String sensorPtdHostOs()>
59::<spec.harness.analyzer.TempSensor: java.lang.String sensorPtdMode()>
60::<spec.harness.analyzer.TempSensor: void <clinit>()>
61::<spec.harness.analyzer.CallbackAnalyzerExample: void <init>()>
62::<spec.harness.analyzer.CallbackAnalyzerExample: void setup()>
63::<spec.harness.analyzer.CallbackAnalyzerExample: void tearDown()>
64::<spec.harness.analyzer.CallbackAnalyzerExample: void callbackMethod(int)>
65::<spec.harness.analyzer.HeapMemoryTotalAnalyzer: void <init>()>
66::<spec.harness.analyzer.HeapMemoryTotalAnalyzer: void execute(long)>
67::<spec.reporter.BenchmarkRecord$IterationRecord: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
68::<spec.reporter.BenchmarkRecord$IterationRecord: void addError(java.lang.String)>
69::<spec.reporter.BenchmarkChart: void <init>(java.lang.String)>
70::<spec.reporter.BenchmarkChart: void addTotalHeapInfo(long,long)>
71::<spec.reporter.BenchmarkChart: void addFreeHeapInfo(long,long)>
72::<spec.reporter.BenchmarkChart: void addAnalyzerReport(java.lang.String,java.lang.String,long,long)>
73::<spec.reporter.BenchmarkChart: void addAxis(java.lang.String,java.lang.String,org.jfree.data.xy.XYSeries)>
74::<spec.reporter.BenchmarkChart: void addTimeInfo(java.lang.String,long,long)>
75::<spec.reporter.BenchmarkChart: void addTimeInfo(long,long)>
76::<spec.reporter.BenchmarkChart: void addMarker(long,java.lang.String)>
77::<spec.reporter.BenchmarkChart: void setMemoryAxis()>
78::<spec.reporter.BenchmarkChart: void buildJPEG()>
79::<spec.reporter.BenchmarkChart: void updateColors()>
80::<spec.reporter.Utils: void <init>()>
81::<spec.reporter.Utils: void createBmResultGraph(spec.reporter.BenchmarkRecord)>
82::<spec.reporter.Utils: void initDescriptions()>
83::<spec.reporter.Utils: java.lang.String getDescription(java.lang.String)>
84::<spec.reporter.Utils: java.util.HashMap initColorMap()>
85::<spec.reporter.Utils: void generateMainChart(double,java.util.TreeMap)>
86::<spec.reporter.Utils: boolean isCheck(spec.reporter.BenchmarkRecord)>
87::<spec.reporter.Utils: boolean isScimarkMonteCarlo(spec.reporter.BenchmarkRecord)>
88::<spec.reporter.Utils: boolean isScimarkLarge(spec.reporter.BenchmarkRecord)>
89::<spec.reporter.Utils: boolean isScimarkSmall(spec.reporter.BenchmarkRecord)>
90::<spec.reporter.Utils: java.lang.String getImageName(java.lang.String)>
91::<spec.reporter.Utils: java.lang.String getFullImageName(java.lang.String)>
92::<spec.reporter.Utils: java.lang.String formatScore(double)>
93::<spec.reporter.Utils: java.lang.String formatScore(double,java.lang.String)>
94::<spec.reporter.Utils: java.lang.String formatScore(double,java.lang.String,java.lang.String)>
95::<spec.reporter.Utils: void dbgPrint(java.lang.String)>
96::<spec.reporter.Utils: boolean isValidScore(java.lang.Double)>
97::<spec.reporter.Utils: boolean isValidScore(double)>
98::<spec.reporter.Utils: void <clinit>()>
99::<spec.harness.Util: void <init>()>
100::<spec.harness.Util: long getTimeProperty(java.lang.String,java.lang.String)>
101::<spec.harness.Util: long getTimeAsMillis(java.lang.String)>
102::<spec.harness.Util: long getTimeAsSeconds(java.lang.String)>
103::<spec.harness.Util: int getHwtCalcProperty(java.lang.String,java.lang.String)>
104::<spec.harness.Util: boolean getBoolProperty(java.lang.String,java.lang.String)>
105::<spec.harness.Util: int getIntProperty(java.lang.String,java.lang.String)>
106::<spec.harness.Util: long getLongProperty(java.lang.String,java.lang.String)>
107::<spec.harness.Util: java.lang.String getPropertyHelper(java.util.Properties,java.lang.String,java.lang.String)>
108::<spec.harness.Util: java.lang.String getProperty(java.lang.String,java.lang.String)>
109::<spec.harness.Util: java.lang.String getDefaultProperty(java.lang.String,java.lang.String)>
110::<spec.harness.Util: java.lang.String getUserProperty(java.lang.String,java.lang.String)>
111::<spec.harness.Util: void printProperties(java.util.Properties)>
112::<spec.harness.Util: void printProperties(java.io.PrintStream,java.util.Properties)>
113::<spec.harness.Util: void printReqs(java.util.HashMap)>
114::<spec.harness.Util: void printProperties(java.io.PrintStream,java.util.HashMap)>
115::<spec.harness.Util: boolean sleep(long)>
116::<spec.harness.Util: boolean isScimarkAndNotMonteCarlo(java.lang.String)>
117::<spec.harness.Util: java.lang.String getNextRawFileInDir()>
118::<spec.harness.Util: boolean createDir(java.io.File)>
119::<spec.harness.Util: java.lang.String getNextRawFileInDir(java.io.File)>
120::<spec.harness.Util: boolean isBenchmark(java.lang.String)>
121::<spec.harness.Util: java.lang.String[] parseDefaultJvmArgs()>
122::<spec.harness.Util: java.lang.String getSizeFromHeapArg(java.lang.String)>
123::<spec.harness.KnownIssues: void <init>()>
124::<spec.harness.KnownIssues: void printKnownIssuesInfo()>
125::<spec.harness.KnownIssues: void printKnownIssueXmlTransformRace()>
126::<spec.harness.KnownIssues: void printKnownIssueJavacVersion()>
127::<spec.harness.KnownIssues: void printKnownIssueutOfMemoryError()>
128::<spec.harness.KnownIssues: void <clinit>()>
129::<spec.reporter.ReportGenerator: void <init>(java.lang.String,boolean,boolean,boolean,boolean)>
130::<spec.reporter.ReportGenerator: void handleBenchmarksResults(org.w3c.dom.Node)>
131::<spec.reporter.ReportGenerator: void collectBmConfiguration(spec.reporter.BenchmarkRecord,org.w3c.dom.NamedNodeMap)>
132::<spec.reporter.ReportGenerator: void handleBenchmarkResult(org.w3c.dom.Node)>
133::<spec.reporter.ReportGenerator: void generateHat(spec.reporter.Writer,java.lang.String,java.lang.String,java.lang.String)>
134::<spec.reporter.ReportGenerator: void generateSummaryTable(spec.reporter.Writer,java.lang.String)>
135::<spec.reporter.ReportGenerator: void generateConfigTable(spec.reporter.Writer)>
136::<spec.reporter.ReportGenerator: java.util.ArrayList findProperties(java.lang.String,java.lang.String)>
137::<spec.reporter.ReportGenerator: void generateViolationsTable(spec.reporter.Writer)>
138::<spec.reporter.ReportGenerator: void generateDetailsTable(spec.reporter.Writer)>
139::<spec.reporter.ReportGenerator: void generateCopyRightStatement(spec.reporter.Writer)>
140::<spec.reporter.ReportGenerator: java.lang.String generateReport()>
141::<spec.reporter.ReportGenerator: void generateInfoTable(org.w3c.dom.Node,spec.reporter.Writer,java.lang.String[])>
142::<spec.reporter.ReportGenerator: java.lang.String insertBRTag(java.lang.String,spec.reporter.Writer)>
143::<spec.reporter.ReportGenerator: void handleIterationResult(spec.reporter.BenchmarkRecord,spec.reporter.BenchmarkChart,org.w3c.dom.Node)>
144::<spec.reporter.ReportGenerator: boolean checkName(java.lang.String,org.w3c.dom.Node)>
145::<spec.reporter.ReportGenerator: void handleLoopsNode(spec.reporter.BenchmarkRecord$IterationRecord,spec.reporter.BenchmarkChart,org.w3c.dom.Node)>
146::<spec.reporter.ReportGenerator: void checkErrors(spec.reporter.BenchmarkRecord$IterationRecord,org.w3c.dom.Node)>
147::<spec.reporter.ReportGenerator: void createSummary(java.lang.String,java.lang.String,java.lang.String)>
148::<spec.reporter.ReportGenerator: void printConstantProp(java.io.PrintStream,java.lang.String)>
149::<spec.reporter.ReportGenerator: void printConstantProp(java.io.PrintStream,java.lang.String,java.lang.String)>
150::<spec.reporter.ReportGenerator: void createSubFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
151::<spec.reporter.ReportGenerator: void handleAnalyzersNode(spec.reporter.BenchmarkChart,org.w3c.dom.Node)>
152::<spec.reporter.ReportGenerator: boolean isCompliantRun()>
153::<spec.reporter.ReportGenerator: void insertSuiteConfiguration(spec.reporter.Writer)>
154::<spec.reporter.ReportGenerator: java.lang.String main2(java.lang.String[])>
155::<spec.reporter.ReportGenerator: void main(java.lang.String[])>
156::<spec.reporter.ReportGenerator: void <clinit>()>
157::<spec.harness.Context: void <init>()>
158::<spec.harness.Context: java.io.PrintStream getOut()>
159::<spec.harness.Context: void setOut(java.io.PrintStream)>
160::<spec.harness.Context: java.lang.String getResourceDirFor(java.lang.Class)>
161::<spec.harness.Context: java.lang.String staticToString()>
162::<spec.harness.Context: void closeXmlResultFile()>
163::<spec.harness.Context: void <clinit>()>
164::<spec.harness.CommandLineParser: void <init>()>
165::<spec.harness.CommandLineParser: void usage(java.io.PrintStream)>
166::<spec.harness.CommandLineParser: void version(java.io.PrintStream)>
167::<spec.harness.CommandLineParser: boolean parseArgs(java.lang.String[],java.util.Properties)>
168::<spec.harness.analyzer.PollingAnalyzerExample$NumberOfOperations: void <init>(long,long)>
169::<spec.harness.analyzer.PollingAnalyzerExample$NumberOfOperations: java.lang.String getName()>
170::<spec.harness.analyzer.PollingAnalyzerExample$NumberOfOperations: java.lang.String getUnit()>
171::<spec.harness.analyzer.CallbackAnalyzerExample$NumberInfo: void <init>(long,long)>
172::<spec.harness.analyzer.CallbackAnalyzerExample$NumberInfo: java.lang.String getName()>
173::<spec.harness.analyzer.CallbackAnalyzerExample$NumberInfo: java.lang.String getUnit()>
174::<spec.io.FileCache: void <init>()>
175::<spec.io.FileCache: java.io.ByteArrayInputStream getStream(java.lang.String)>
176::<spec.io.FileCache: void discard(java.lang.String)>
177::<spec.io.FileCache: int getLength(java.lang.String)>
178::<spec.io.FileCache: void clearCache()>
179::<spec.io.FileCache: boolean hasFile(java.lang.String)>
180::<spec.io.FileCache: byte[] getByteArray(java.lang.String)>
181::<spec.io.FileCache: void loadFile(java.lang.String)>
182::<spec.reporter.BenchmarkGroupRecords$BenchmarkGroupRecord: void <init>(spec.reporter.BenchmarkRecord)>
183::<spec.reporter.BenchmarkGroupRecords$BenchmarkGroupRecord: void <init>(java.lang.String)>
184::<spec.reporter.BenchmarkGroupRecords$BenchmarkGroupRecord: void addBenchmarkRecord(spec.reporter.BenchmarkRecord)>
185::<spec.reporter.BenchmarkGroupRecords$BenchmarkGroupRecord: double computeScore()>
186::<spec.reporter.Writer: void <init>(java.lang.String)>
187::<spec.reporter.Writer: void closeStream()>
188::<spec.reporter.Writer: spec.reporter.Writer getInstance(java.lang.String,java.lang.String)>
189::<spec.harness.analyzer.PowerMeter: void <init>(java.lang.String,int)>
190::<spec.harness.analyzer.PowerMeter: int writeMeter(java.lang.String)>
191::<spec.harness.analyzer.PowerMeter: java.lang.String readMeter()>
192::<spec.harness.analyzer.PowerMeter: void endSocConnection()>
193::<spec.harness.analyzer.PowerMeter: void startRun(int,int,int)>
194::<spec.harness.analyzer.PowerMeter: void go()>
195::<spec.harness.analyzer.PowerMeter: void stop()>
196::<spec.harness.analyzer.PowerMeter: java.util.HashMap reportRun(java.lang.String)>
197::<spec.harness.analyzer.PowerMeter: java.lang.Boolean meterCompliant()>
198::<spec.harness.analyzer.PowerMeter: java.lang.String meterPtdVersion()>
199::<spec.harness.analyzer.PowerMeter: java.lang.String meterPtdHostOs()>
200::<spec.harness.analyzer.PowerMeter: java.lang.String meterPtdMode()>
201::<spec.harness.analyzer.PowerMeter: void <clinit>()>
202::<spec.harness.results.IterationResult: void <init>()>
203::<spec.harness.results.IterationResult: boolean incNumberBmThreadsDone()>
204::<spec.harness.results.IterationResult: java.lang.String durDesc()>
205::<spec.harness.results.IterationResult: java.lang.String resultString(java.lang.String)>
206::<spec.harness.results.IterationResult: double getScore()>
207::<spec.harness.results.IterationResult: boolean isValid()>
208::<spec.harness.results.IterationResult: java.util.List getAllErrors(java.lang.String)>
209::<spec.harness.results.IterationResult: void toXml(java.io.PrintStream,int)>
210::<spec.reporter.BenchmarkRecord: void <init>(java.lang.String,int)>
211::<spec.reporter.BenchmarkRecord: spec.reporter.BenchmarkRecord$IterationRecord addIterationRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
212::<spec.reporter.BenchmarkRecord: void printAllRecordedInfo()>
213::<spec.reporter.BenchmarkRecord: boolean isValidRun()>
214::<spec.harness.Launch: void <init>()>
215::<spec.harness.Launch: void runBenchmarkSuite(java.util.Properties)>
216::<spec.harness.Launch: java.lang.String openResultFile(java.util.Properties)>
217::<spec.harness.Launch: void closeResultFile(java.lang.String)>
218::<spec.harness.Launch: void closeSubmissionFile(java.lang.String)>
219::<spec.harness.Launch: java.lang.String createReport(java.lang.String)>
220::<spec.harness.Launch: java.lang.String createReport(java.lang.String[])>
221::<spec.harness.Launch: spec.harness.results.BenchmarkResult runOneBenchmark(java.lang.String,int,int,int)>
222::<spec.harness.Launch: java.lang.String checkBenchmarkKit()>
223::<spec.harness.Launch: void setupContext()>
224::<spec.harness.Launch: boolean setupSimple(java.lang.String[])>
225::<spec.harness.Launch: void main(java.lang.String[])>
226::<spec.harness.Launch: void <clinit>()>
227::<spec.harness.analyzer.PowerAnalyzer$PowerConsumtionResult: void <init>(double,java.lang.String,java.lang.String)>
228::<spec.harness.VMVersionTest: void <init>()>
229::<spec.harness.VMVersionTest: java.lang.String getVersionInfo()>
230::<spec.harness.VMVersionTest: void main(java.lang.String[])>
231::<spec.benchmarks.xml.transform.BaseOutputStream: void <init>()>
232::<spec.benchmarks.xml.transform.BaseOutputStream: java.lang.String getResult()>
233::<spec.benchmarks.xml.transform.BaseOutputStream: void checkResult(int)>
234::<spec.benchmarks.xml.transform.BaseOutputStream: void handleSuccessfullValidation()>
235::<spec.benchmarks.xml.transform.BaseOutputStream: void handleErrorValidation(int)>
236::<spec.harness.analyzer.AnalyzerResult: void <init>(double)>
237::<spec.harness.analyzer.AnalyzerResult: java.lang.String getDescription()>
238::<spec.harness.analyzer.TempAnalyzer: void setupAnalyzerClass()>
239::<spec.harness.analyzer.TempAnalyzer: void tearDownAnalyzerClass()>
240::<spec.harness.analyzer.TempAnalyzer: void <init>()>
241::<spec.harness.analyzer.TempAnalyzer: void setup()>
242::<spec.harness.analyzer.TempAnalyzer: void startMeasurementInterval()>
243::<spec.harness.analyzer.TempAnalyzer: void endMeasurementInterval()>
244::<spec.harness.analyzer.TempAnalyzer: void tearDown()>
245::<spec.harness.StopBenchmarkException: void <init>(java.lang.String)>
246::<spec.harness.StopBenchmarkException: void <init>(java.lang.String,java.lang.Throwable)>
247::<spec.reporter.PlainWriter: void <init>(java.lang.String)>
248::<spec.reporter.PlainWriter: void handleIterRecord(spec.reporter.BenchmarkRecord)>
249::<spec.reporter.PlainWriter: void handleBenchmarkRecord(spec.reporter.BenchmarkRecord)>
250::<spec.reporter.PlainWriter: void insertRecord(java.lang.String,java.lang.String)>
251::<spec.reporter.PlainWriter: void putHat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
252::<spec.reporter.PlainWriter: void putSummaryTable(java.lang.String,java.util.TreeMap)>
253::<spec.reporter.PlainWriter: void startDetailsTable()>
254::<spec.reporter.PlainWriter: void insertRecords(java.util.ArrayList)>
255::<spec.harness.analyzer.PowerAnalyzer: void setupAnalyzerClass()>
256::<spec.harness.analyzer.PowerAnalyzer: void tearDownAnalyzerClass()>
257::<spec.harness.analyzer.PowerAnalyzer: void <init>()>
258::<spec.harness.analyzer.PowerAnalyzer: void setup()>
259::<spec.harness.analyzer.PowerAnalyzer: void startMeasurementInterval()>
260::<spec.harness.analyzer.PowerAnalyzer: void endMeasurementInterval()>
261::<spec.harness.analyzer.PowerAnalyzer: void tearDown()>
262::<spec.benchmarks.xml.transform.ExtOutputStream: byte[] getFileArray(java.lang.String)>
263::<spec.benchmarks.xml.transform.ExtOutputStream: boolean checkValidity()>
264::<spec.benchmarks.xml.transform.ExtOutputStream: void writeDiffToFile(int,int,java.lang.String[])>
265::<spec.benchmarks.xml.transform.ExtOutputStream: void canonicalize(java.lang.String,java.lang.String)>
266::<spec.benchmarks.xml.transform.ExtOutputStream: void runTidy()>
267::<spec.benchmarks.xml.transform.ExtOutputStream: void check(java.lang.String)>
268::<spec.benchmarks.xml.transform.ExtOutputStream: void <init>()>
269::<spec.benchmarks.xml.transform.ExtOutputStream: java.lang.String filter(java.lang.String)>
270::<spec.benchmarks.xml.transform.ExtOutputStream: void setCurrentProp(java.lang.String)>
271::<spec.benchmarks.xml.transform.ExtOutputStream: void write(int)>
272::<spec.benchmarks.xml.transform.ExtOutputStream: void write(byte[])>
273::<spec.benchmarks.xml.transform.ExtOutputStream: void write(byte[],int,int)>
274::<spec.benchmarks.xml.transform.ExtOutputStream: void reset()>
275::<spec.benchmarks.xml.transform.ExtOutputStream: void checkResult(int)>
276::<spec.benchmarks.xml.transform.ExtOutputStream: void handleSuccessfullValidation()>
277::<spec.benchmarks.xml.transform.ExtOutputStream: void handleErrorValidation(int)>
278::<spec.benchmarks.xml.transform.ExtOutputStream: java.lang.String getSendResultsMessage()>
279::<spec.benchmarks.xml.validation.Main: void setupBenchmark()>
280::<spec.benchmarks.xml.validation.Main: void setupValidators(java.lang.String)>
281::<spec.benchmarks.xml.validation.Main: void <init>(spec.harness.results.BenchmarkResult,int)>
282::<spec.benchmarks.xml.validation.Main: void harnessMain()>
283::<spec.benchmarks.xml.validation.Main: void main(java.lang.String[])>
284::<spec.benchmarks.xml.validation.Main: void executeWorkload()>
285::<spec.benchmarks.xml.validation.Main: void doValidationTests(int,spec.io.FileCache$CachedFile,javax.xml.validation.Validator)>
286::<spec.benchmarks.xml.validation.Main: void validateSource(int,javax.xml.transform.Source,javax.xml.validation.Validator)>
287::<spec.harness.analyzer.AnalyzersRunner: void <init>(spec.harness.results.IterationResult,long)>
288::<spec.harness.analyzer.AnalyzersRunner: void run()>
289::<spec.harness.analyzer.AnalyzersRunner: boolean executeAnalyzers()>
290::<spec.harness.analyzer.AnalyzersRunner: void setupAnalyzerClasses(java.lang.String)>
291::<spec.harness.analyzer.AnalyzersRunner: void tearDownAnalyzerClasses()>
292::<spec.harness.analyzer.AnalyzersRunner: boolean internalSetupAnalyzers()>
293::<spec.harness.analyzer.AnalyzersRunner: void invokeStartMeasurementIntervalForAnalyzers()>
294::<spec.harness.analyzer.AnalyzersRunner: void invokeEndMeasurementIntervalForAnalyzers()>
295::<spec.harness.analyzer.AnalyzersRunner: void internalTearDownAnalyzers()>
296::<spec.harness.analyzer.AnalyzersRunner: void setupAnalyzers(spec.harness.results.IterationResult,long)>
297::<spec.harness.analyzer.AnalyzersRunner: void tearDownAnalyzers(spec.harness.results.IterationResult)>
298::<spec.harness.analyzer.AnalyzersRunner: void <clinit>()>
299::<spec.benchmarks.xml.ReportingHandler: void <init>()>
300::<spec.benchmarks.xml.ReportingHandler: void error(org.xml.sax.SAXParseException)>
301::<spec.benchmarks.xml.ReportingHandler: void fatalError(org.xml.sax.SAXParseException)>
302::<spec.benchmarks.xml.ReportingHandler: void warning(org.xml.sax.SAXParseException)>
303::<spec.benchmarks.xml.ReportingHandler: void report(org.xml.sax.SAXParseException)>
304::<spec.io.FileCache$CachedFile: void <init>(spec.io.FileCache,java.lang.String)>
305::<spec.io.FileCache$CachedFile: java.io.ByteArrayInputStream getStream()>
306::<spec.io.FileCache$CachedFile: void cache()>
307::<spec.io.FileCache$CachedFile: void discard()>
308::<spec.io.FileCache$CachedFile: org.xml.sax.InputSource asNewInputSource()>
309::<spec.io.FileCache$CachedFile: javax.xml.transform.stream.StreamSource asNewStreamSource()>
310::<spec.benchmarks.xml.transform.Main: void setupBenchmark()>
311::<spec.benchmarks.xml.transform.Main: void tearDownBenchmark()>
312::<spec.benchmarks.xml.transform.Main: void setupTransformers()>
313::<spec.benchmarks.xml.transform.Main: void <init>(spec.harness.results.BenchmarkResult,int)>
314::<spec.benchmarks.xml.transform.Main: void harnessMain()>
315::<spec.benchmarks.xml.transform.Main: void setOutputStream(spec.benchmarks.xml.transform.BaseOutputStream)>
316::<spec.benchmarks.xml.transform.Main: void main(java.lang.String[])>
317::<spec.benchmarks.xml.transform.Main: void setValidationProperties(java.util.Properties)>
318::<spec.benchmarks.xml.transform.Main: java.util.Properties getOutProperties()>
319::<spec.benchmarks.xml.transform.Main: void executeWorkload()>
320::<spec.benchmarks.xml.transform.Main: void transform(javax.xml.transform.Transformer,javax.xml.transform.Source,java.lang.String,int)>
321::<spec.reporter.SPECSubmissionProcessor: void <init>()>
322::<spec.reporter.SPECSubmissionProcessor: void unzipFile(java.lang.String,java.lang.String)>
323::<spec.reporter.SPECSubmissionProcessor: java.lang.String getResultFile(java.lang.String,java.lang.String)>
324::<spec.reporter.SPECSubmissionProcessor: void splitMergedRawFile(java.lang.String)>
325::<spec.reporter.SPECSubmissionProcessor: void createMergedSubFile()>
326::<spec.reporter.SPECSubmissionProcessor: void createResultFile(java.util.Properties)>
327::<spec.reporter.SPECSubmissionProcessor: void main(java.lang.String[])>
328::<spec.reporter.SPECSubmissionProcessor: void <clinit>()>
329::<spec.harness.analyzer.HeapMemoryTotalAnalyzer$HeapMemoryTotal: void <init>(long,long)>
330::<spec.harness.analyzer.HeapMemoryTotalAnalyzer$HeapMemoryTotal: java.lang.String getName()>
331::<spec.harness.analyzer.HeapMemoryTotalAnalyzer$HeapMemoryTotal: java.lang.String getUnit()>
332::<spec.harness.Context$1: void <init>()>
333::<spec.harness.BenchmarkThread: void <init>(spec.harness.results.BenchmarkResult,int)>
334::<spec.harness.BenchmarkThread: java.lang.String[] getArgs()>
335::<spec.harness.BenchmarkThread: void run()>
336::<spec.harness.BenchmarkThread: boolean executeIteration()>
337::<spec.harness.BenchmarkThread: spec.harness.results.LoopResult runLoop(spec.harness.results.IterationResult)>
338::<spec.reporter.SPECSubmissionPreparer: void <init>()>
339::<spec.reporter.SPECSubmissionPreparer: void prepareFiles(java.lang.String[])>
340::<spec.reporter.SPECSubmissionPreparer: java.lang.String mergeFiles(java.io.File[])>
341::<spec.reporter.SPECSubmissionPreparer: void zipFile(java.lang.String)>
342::<spec.reporter.SPECSubmissionPreparer: void main(java.lang.String[])>
343::<spec.benchmarks.xml.XMLBenchmark: void <init>(spec.harness.results.BenchmarkResult,int)>
344::<spec.benchmarks.xml.XMLBenchmark: javax.xml.transform.Source createDomSource(spec.io.FileCache$CachedFile)>
345::<spec.benchmarks.xml.XMLBenchmark: javax.xml.transform.Source createSaxSource(spec.io.FileCache$CachedFile)>
346::<spec.benchmarks.xml.XMLBenchmark: java.lang.String getFullName(java.lang.Class,java.lang.String,java.lang.String)>
347::<spec.benchmarks.xml.XMLBenchmark: spec.io.FileCache$CachedFile getCachedFile(java.lang.Class,java.lang.String,java.lang.String)>
348::<spec.benchmarks.xml.XMLBenchmark: void remove(java.io.File)>
349::<spec.reporter.BenchmarkGroupRecords: void <init>()>
350::<spec.reporter.BenchmarkGroupRecords: void addNewBenchmarkRecord(spec.reporter.BenchmarkRecord)>
351::<spec.reporter.BenchmarkGroupRecords: double computeCompositeScore()>
352::<spec.reporter.BenchmarkGroupRecords: void updateGroupRecord(java.lang.String,spec.reporter.BenchmarkRecord)>
353::<spec.reporter.BenchmarkGroupRecords$BenchmarkResultsIterator: void <init>(spec.reporter.BenchmarkGroupRecords)>
354::<spec.reporter.BenchmarkGroupRecords$BenchmarkResultsIterator: spec.reporter.BenchmarkRecord next()>
355::<spec.harness.analyzer.HeapMemoryFreeAnalyzer$HeapMemoryFree: void <init>(long,long)>
356::<spec.harness.analyzer.HeapMemoryFreeAnalyzer$HeapMemoryFree: java.lang.String getName()>
357::<spec.harness.analyzer.HeapMemoryFreeAnalyzer$HeapMemoryFree: java.lang.String getUnit()>
358::<spec.harness.results.LoopResult: void <init>()>
359::<spec.harness.results.LoopResult: void toXml(java.io.PrintStream,int)>
360::<spec.harness.results.LoopResult: boolean isValid()>
361::<spec.harness.results.LoopResult: java.util.List getAllErrors(java.lang.String)>
362::<spec.reporter.ReportGenerator$Pair: void <init>(spec.reporter.ReportGenerator,java.lang.Object,java.lang.Object)>
363::<spec.harness.analyzer.PollingAnalyzerExample: void <init>()>
364::<spec.harness.analyzer.PollingAnalyzerExample: void execute(long)>
365::<spec.harness.analyzer.AnalyzerBase: void <init>()>
366::<spec.harness.analyzer.AnalyzerBase: void report(spec.harness.analyzer.TYInfo)>
367::<spec.harness.analyzer.AnalyzerBase: void report(spec.harness.analyzer.AnalyzerResult)>
368::<spec.harness.analyzer.AnalyzerBase: boolean isTimedRun()>
369::<spec.harness.analyzer.AnalyzerBase: long getBenchmarkDuration()>
370::<spec.harness.analyzer.AnalyzerBase: java.lang.String getBenchmarkName()>
371::<spec.harness.analyzer.AnalyzerBase: long getNoOps()>
372::<spec.harness.analyzer.AnalyzerBase: void addError(java.lang.String)>
373::<spec.harness.analyzer.AnalyzerBase: void addErrorToSuiteResult(java.lang.String)>
374::<spec.harness.analyzer.AnalyzerBase: void addViolationToSuiteResult(java.lang.String)>
375::<spec.reporter.HTMLWriter: java.lang.String[] initIndents()>
376::<spec.reporter.HTMLWriter: void <init>(java.lang.String)>
377::<spec.reporter.HTMLWriter: void startTable(java.lang.String,boolean,boolean,boolean)>
378::<spec.reporter.HTMLWriter: void startTable(java.lang.String,boolean)>
379::<spec.reporter.HTMLWriter: void startTable(boolean)>
380::<spec.reporter.HTMLWriter: void insertImgData(java.lang.String,java.lang.String,int)>
381::<spec.reporter.HTMLWriter: void startDetailsTable()>
382::<spec.reporter.HTMLWriter: void insertData(java.lang.String)>
383::<spec.reporter.HTMLWriter: void insertData(java.lang.String,int)>
384::<spec.reporter.HTMLWriter: void insertRecord(java.lang.String,java.lang.String)>
385::<spec.reporter.HTMLWriter: void insertHeaderData(java.lang.String,java.lang.String,boolean,int,int,java.lang.String)>
386::<spec.reporter.HTMLWriter: void insertHeaderData(java.lang.String,java.lang.String,boolean,int,int)>
387::<spec.reporter.HTMLWriter: void insertHeaderRecord(java.lang.String,java.lang.String,boolean,int,int)>
388::<spec.reporter.HTMLWriter: void startRecord()>
389::<spec.reporter.HTMLWriter: void endRecord()>
390::<spec.reporter.HTMLWriter: void endAndStartRecord()>
391::<spec.reporter.HTMLWriter: void putColumnsSpec(int[])>
392::<spec.reporter.HTMLWriter: void putSummaryTable(java.lang.String,java.util.TreeMap)>
393::<spec.reporter.HTMLWriter: void putHat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
394::<spec.reporter.HTMLWriter: void endData()>
395::<spec.reporter.HTMLWriter: void startData()>
396::<spec.reporter.HTMLWriter: void startRecordAndData()>
397::<spec.reporter.HTMLWriter: void putTHEAD(boolean)>
398::<spec.reporter.HTMLWriter: void putTBODY(boolean)>
399::<spec.reporter.HTMLWriter: void putTABLE(boolean,java.lang.String)>
400::<spec.reporter.HTMLWriter: void endRecordAndData()>
401::<spec.reporter.HTMLWriter: void endAndStartRecordAndData()>
402::<spec.reporter.HTMLWriter: void endAndStartData()>
403::<spec.reporter.HTMLWriter: void endTable()>
404::<spec.reporter.HTMLWriter: void endTable(boolean)>
405::<spec.reporter.HTMLWriter: void putString(java.lang.String)>
406::<spec.reporter.HTMLWriter: void handleIterRecord(java.util.ArrayList,int)>
407::<spec.reporter.HTMLWriter: java.lang.String createConfRecord(java.lang.String[])>
408::<spec.reporter.HTMLWriter: void handleBenchmarkRecord(spec.reporter.BenchmarkRecord)>
409::<spec.reporter.HTMLWriter: java.lang.String insertBRTags(java.util.ArrayList)>
410::<spec.reporter.HTMLWriter: void insertRecords(java.util.ArrayList)>
411::<spec.reporter.HTMLWriter: void startReport()>
412::<spec.reporter.HTMLWriter: void endReport()>
413::<spec.harness.analyzer.TYInfo: void <init>(long,long)>
414::<spec.harness.analyzer.TempAnalyzer$TemperatureResult: void <init>(double,java.lang.String,java.lang.String)>
415::<spec.harness.results.TestResult: void <init>()>
416::<spec.harness.results.TestResult: void addError(java.lang.String)>
417::<spec.harness.results.TestResult: void printErrorsToXml(java.io.PrintStream,int)>
418::<spec.harness.results.TestResult: void ptxAttrib(java.io.PrintStream,int,java.lang.String,java.lang.String,boolean,java.lang.String)>
419::<spec.harness.results.TestResult: void ptxAttrib(java.io.PrintStream,int,java.lang.String,long,boolean,java.lang.String)>
420::<spec.harness.results.TestResult: void ptxAttrib(java.io.PrintStream,int,java.lang.String,double,boolean,java.lang.String)>
421::<spec.harness.results.TestResult: void ptxAttrib(java.io.PrintStream,int,java.lang.String,boolean,boolean,java.lang.String)>
422::<spec.harness.results.TestResult: void ptxAttrib(java.io.PrintStream,int,java.lang.String,java.lang.String[],boolean,java.lang.String)>
423::<spec.harness.results.TestResult: void ptxElement(java.io.PrintStream,int,java.lang.String,java.lang.String)>
424::<spec.harness.results.TestResult: void ptxElementOpen(java.io.PrintStream,int,java.lang.String)>
425::<spec.harness.results.TestResult: void ptxElementStartOpen(java.io.PrintStream,int,java.lang.String,boolean)>
426::<spec.harness.results.TestResult: void ptxElementClose(java.io.PrintStream,int,java.lang.String)>
427::<spec.harness.results.TestResult: java.lang.String ptxArrToValue(java.lang.String[])>
428::<spec.harness.results.TestResult: void ptxXmlHeader(java.io.PrintStream)>
429::<spec.harness.results.TestResult: java.lang.String doubleAsRes(double)>
430::<spec.harness.results.TestResult: java.lang.String millisAsSec(long)>
431::<spec.harness.results.TestResult: java.lang.String getIndent(int)>
432::<spec.harness.results.TestResult: java.lang.String correctContent(java.lang.String,boolean)>
433::<spec.harness.results.TestResult: void <clinit>()>
434::<spec.harness.results.SuiteResult: void <init>()>
435::<spec.harness.results.SuiteResult: void addJvmInfo(java.lang.String,java.util.Properties,java.lang.String)>
436::<spec.harness.results.SuiteResult: void addJvmInfo(java.lang.String,java.lang.String)>
437::<spec.harness.results.SuiteResult: void addRunInfo(java.lang.String,java.util.Properties,java.lang.String)>
438::<spec.harness.results.SuiteResult: void addSwInfo(java.lang.String,java.util.Properties,java.lang.String)>
439::<spec.harness.results.SuiteResult: void addHwInfo(java.lang.String,java.util.Properties,java.lang.String)>
440::<spec.harness.results.SuiteResult: void addViolation(java.lang.String)>
441::<spec.harness.results.SuiteResult: void addConfiguration(java.lang.String)>
442::<spec.harness.results.SuiteResult: boolean isValid()>
443::<spec.harness.results.SuiteResult: java.util.List getAllErrors(java.lang.String)>
444::<spec.harness.results.SuiteResult: void headerToXml(java.io.PrintStream,int)>
445::<spec.harness.results.SuiteResult: void toXml(java.io.PrintStream,int)>
446::<spec.harness.results.SuiteResult: void footerToXml(java.io.PrintStream,int)>
447::<spec.harness.results.SuiteResult: java.lang.String getCommandLineOptions()>
448::<spec.reporter.Reporter: void <init>()>
449::<spec.reporter.Reporter: void usage()>
450::<spec.reporter.Reporter: java.lang.String main2(java.lang.String[])>
451::<spec.reporter.Reporter: void main(java.lang.String[])>
452::<spec.harness.results.BenchmarkResult: void <init>()>
453::<spec.harness.results.BenchmarkResult: void setIterationTime(long)>
454::<spec.harness.results.BenchmarkResult: java.lang.String durDesc()>
455::<spec.harness.results.BenchmarkResult: double getScore()>
456::<spec.harness.results.BenchmarkResult: java.lang.String resultString()>
457::<spec.harness.results.BenchmarkResult: boolean isValid()>
458::<spec.harness.results.BenchmarkResult: java.util.List getAllErrors(java.lang.String)>
459::<spec.harness.results.BenchmarkResult: void headerToXml(java.io.PrintStream,int)>
460::<spec.harness.results.BenchmarkResult: void toXml(java.io.PrintStream,int)>
461::<spec.harness.results.BenchmarkResult: void middleToXml(java.io.PrintStream,int)>
462::<spec.harness.results.BenchmarkResult: void footerToXml(java.io.PrintStream,int)>
463::<spec.harness.Constants: void <init>()>
