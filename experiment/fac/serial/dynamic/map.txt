0::<spec.harness.ProgramRunner: void <init>(spec.harness.results.BenchmarkResult,int)>
1::<spec.harness.ProgramRunner: void run()>
2::<spec.harness.ProgramRunner: boolean setupBenchmarkMethods()>
3::<spec.harness.ProgramRunner: spec.harness.SpecJVMBenchmarkBase createBmInstance(spec.harness.results.BenchmarkResult,int)>
4::<spec.harness.ProgramRunner: java.lang.String invokeBmTestTypeMethod()>
5::<spec.harness.ProgramRunner: void invokeBmSetupBenchmark()>
6::<spec.harness.ProgramRunner: void invokeBmSetupIteration()>
7::<spec.harness.ProgramRunner: void invokeBmTearDownIteration()>
8::<spec.harness.ProgramRunner: void invokeBmTearDownBenchmark()>
9::<spec.harness.ProgramRunner: boolean runBenchmark()>
10::<spec.harness.ProgramRunner: boolean runIteration(java.lang.String,spec.harness.results.IterationResult,spec.harness.results.BenchmarkResult)>
11::<spec.harness.ProgramRunner: java.lang.String getStackTraceAsString(java.lang.Throwable)>
12::<spec.harness.ProgramRunner: int getNoBmHarnessThreads(spec.harness.results.BenchmarkResult)>
13::<spec.harness.ProgramRunner: void pause(long)>
14::<spec.harness.ProgramRunner: void interruptProgramRunner()>
15::<spec.harness.ProgramRunner: void endOfMeasurementInterval(long)>
16::<spec.harness.ProgramRunner: void <clinit>()>
17::<spec.benchmarks.serial.data.TestHugeData: spec.benchmarks.serial.data.TestHugeData createTestInstance()>
18::<spec.benchmarks.serial.data.TestHugeData: spec.benchmarks.serial.data.TestHugeData createTestInstance(int)>
19::<spec.benchmarks.serial.data.TestHugeData: void <init>()>
20::<spec.benchmarks.serial.data.TestHugeData: boolean equals(java.lang.Object)>
21::<spec.benchmarks.serial.data.TestHugeData: void <clinit>()>
22::<spec.harness.analyzer.PowerAnalyzer: void setupAnalyzerClass()>
23::<spec.harness.analyzer.PowerAnalyzer: void tearDownAnalyzerClass()>
24::<spec.harness.analyzer.PowerAnalyzer: void <init>()>
25::<spec.harness.analyzer.PowerAnalyzer: void setup()>
26::<spec.harness.analyzer.PowerAnalyzer: void startMeasurementInterval()>
27::<spec.harness.analyzer.PowerAnalyzer: void endMeasurementInterval()>
28::<spec.harness.analyzer.PowerAnalyzer: void tearDown()>
29::<spec.io.ValidityCheckOutputStream: void <init>(java.lang.String)>
30::<spec.io.ValidityCheckOutputStream: void write(int)>
31::<spec.io.ValidityCheckOutputStream: boolean validityCheck(spec.harness.results.LoopResult)>
32::<spec.io.ValidityCheckOutputStream: void validityCheck2(spec.harness.results.LoopResult)>
33::<spec.io.ValidityCheckOutputStream: void handleValidationFailure(spec.harness.results.LoopResult,int,java.lang.String,java.lang.String)>
34::<spec.io.ValidityCheckOutputStream: java.lang.String getValidityFileName(java.lang.String)>
35::<spec.io.ValidityCheckOutputStream: void createValidityFile()>
36::<spec.io.ValidityCheckOutputStream: void <clinit>()>
37::<spec.harness.SpecJVMBenchmarkBase: void <init>(spec.harness.results.BenchmarkResult,int)>
38::<spec.harness.SpecJVMBenchmarkBase: void runSimple(java.lang.Class,java.lang.String[])>
39::<spec.harness.Configuration: void <init>()>
40::<spec.harness.Configuration: void setupProp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
41::<spec.harness.Configuration: void setupProp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
42::<spec.harness.Configuration: void setupProp(java.lang.String,java.lang.String,java.lang.String)>
43::<spec.harness.Configuration: java.lang.String getFixedOperationsProp(java.lang.String)>
44::<spec.harness.Configuration: void setupProperties()>
45::<spec.harness.Configuration: void checkSetup(spec.harness.results.SuiteResult)>
46::<spec.harness.Configuration: void validateProperty(spec.harness.results.SuiteResult,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
47::<spec.harness.Configuration: java.util.Properties readProperties(java.lang.String)>
48::<spec.harness.Configuration: void addViolation(spec.harness.results.SuiteResult,java.lang.String,java.lang.String)>
49::<spec.harness.Configuration: void addConfigurationDetail(spec.harness.results.SuiteResult,java.lang.String,java.lang.String)>
50::<spec.harness.Configuration: boolean checkLauncher(java.lang.String)>
51::<spec.harness.Configuration: void setupReportInfo(spec.harness.results.SuiteResult,java.util.Properties)>
52::<spec.harness.analyzer.PollingAnalyzerExample$NumberOfOperations: void <init>(long,long)>
53::<spec.harness.analyzer.PollingAnalyzerExample$NumberOfOperations: java.lang.String getName()>
54::<spec.harness.analyzer.PollingAnalyzerExample$NumberOfOperations: java.lang.String getUnit()>
55::<spec.benchmarks.serial.data.TestWithBigDecimal: void <init>()>
56::<spec.benchmarks.serial.data.TestWithBigDecimal: spec.benchmarks.serial.data.TestWithBigDecimal createTestInstance()>
57::<spec.benchmarks.serial.data.TestWithBigDecimal: boolean equals(java.lang.Object)>
58::<spec.benchmarks.serial.data.TestWithBigDecimal: int hashCode()>
59::<spec.benchmarks.serial.data.TestWithBigDecimal: int compare(java.lang.Object,java.lang.Object)>
60::<spec.benchmarks.serial.data.TestHandler: void <init>(int,java.lang.Object)>
61::<spec.benchmarks.serial.data.TestHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>
62::<spec.harness.analyzer.TempAnalyzer$TemperatureResult: void <init>(double,java.lang.String,java.lang.String)>
63::<spec.harness.analyzer.CallbackAnalyzerExample$NumberInfo: void <init>(long,long)>
64::<spec.harness.analyzer.CallbackAnalyzerExample$NumberInfo: java.lang.String getName()>
65::<spec.harness.analyzer.CallbackAnalyzerExample$NumberInfo: java.lang.String getUnit()>
66::<spec.benchmarks.serial.data.TestExceptionReference: void <init>()>
67::<spec.benchmarks.serial.data.TestExceptionReference: spec.benchmarks.serial.data.TestExceptionReference createTestInstance()>
68::<spec.benchmarks.serial.data.TestExceptionReference: boolean equals(java.lang.Object)>
69::<spec.benchmarks.serial.data.TestExceptionReference: java.lang.String toString()>
70::<spec.benchmarks.serial.data.TestReadResolve: void <init>(int,java.lang.String)>
71::<spec.benchmarks.serial.data.TestReadResolve: boolean equals(java.lang.Object)>
72::<spec.benchmarks.serial.data.TestReadResolve: java.lang.String toString()>
73::<spec.benchmarks.serial.data.TestReadResolve: void <clinit>()>
74::<spec.benchmarks.serial.data.TestExternalizable: void <init>()>
75::<spec.benchmarks.serial.data.TestExternalizable: void <init>(int)>
76::<spec.benchmarks.serial.data.TestExternalizable: spec.benchmarks.serial.data.TestExternalizable createTestInstance()>
77::<spec.benchmarks.serial.data.TestExternalizable: java.lang.String toString()>
78::<spec.harness.analyzer.PowerAnalyzer$PowerConsumtionResult: void <init>(double,java.lang.String,java.lang.String)>
79::<spec.benchmarks.serial.data.TestPayload: spec.benchmarks.serial.data.TestPayload createTestInstance()>
80::<spec.benchmarks.serial.data.TestPayload: java.lang.String toString()>
81::<spec.benchmarks.serial.data.TestPayload: void <init>()>
82::<spec.benchmarks.serial.data.TestPayload: void <init>(java.lang.String,int)>
83::<spec.benchmarks.serial.data.TestPayload: java.lang.String getIdentity()>
84::<spec.benchmarks.serial.data.TestPayload: boolean equals(java.lang.Object)>
85::<spec.reporter.BenchmarkRecord$IterationRecord: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
86::<spec.reporter.BenchmarkRecord$IterationRecord: void addError(java.lang.String)>
87::<spec.benchmarks.serial.data.TestClassReferenceTest: void <init>()>
88::<spec.benchmarks.serial.data.TestClassReferenceTest: spec.benchmarks.serial.data.TestClassReferenceTest createTestInstance()>
89::<spec.reporter.BenchmarkChart: void <init>(java.lang.String)>
90::<spec.reporter.BenchmarkChart: void addTotalHeapInfo(long,long)>
91::<spec.reporter.BenchmarkChart: void addFreeHeapInfo(long,long)>
92::<spec.reporter.BenchmarkChart: void addAnalyzerReport(java.lang.String,java.lang.String,long,long)>
93::<spec.reporter.BenchmarkChart: void addAxis(java.lang.String,java.lang.String,org.jfree.data.xy.XYSeries)>
94::<spec.reporter.BenchmarkChart: void addTimeInfo(java.lang.String,long,long)>
95::<spec.reporter.BenchmarkChart: void addTimeInfo(long,long)>
96::<spec.reporter.BenchmarkChart: void addMarker(long,java.lang.String)>
97::<spec.reporter.BenchmarkChart: void setMemoryAxis()>
98::<spec.reporter.BenchmarkChart: void buildJPEG()>
99::<spec.reporter.BenchmarkChart: void updateColors()>
100::<spec.reporter.Utils: void <init>()>
101::<spec.reporter.Utils: void createBmResultGraph(spec.reporter.BenchmarkRecord)>
102::<spec.reporter.Utils: void initDescriptions()>
103::<spec.reporter.Utils: java.lang.String getDescription(java.lang.String)>
104::<spec.reporter.Utils: java.util.HashMap initColorMap()>
105::<spec.reporter.Utils: void generateMainChart(double,java.util.TreeMap)>
106::<spec.reporter.Utils: boolean isCheck(spec.reporter.BenchmarkRecord)>
107::<spec.reporter.Utils: boolean isScimarkMonteCarlo(spec.reporter.BenchmarkRecord)>
108::<spec.reporter.Utils: boolean isScimarkLarge(spec.reporter.BenchmarkRecord)>
109::<spec.reporter.Utils: boolean isScimarkSmall(spec.reporter.BenchmarkRecord)>
110::<spec.reporter.Utils: java.lang.String getImageName(java.lang.String)>
111::<spec.reporter.Utils: java.lang.String getFullImageName(java.lang.String)>
112::<spec.reporter.Utils: java.lang.String formatScore(double)>
113::<spec.reporter.Utils: java.lang.String formatScore(double,java.lang.String)>
114::<spec.reporter.Utils: java.lang.String formatScore(double,java.lang.String,java.lang.String)>
115::<spec.reporter.Utils: void dbgPrint(java.lang.String)>
116::<spec.reporter.Utils: boolean isValidScore(java.lang.Double)>
117::<spec.reporter.Utils: boolean isValidScore(double)>
118::<spec.reporter.Utils: void <clinit>()>
119::<spec.harness.Util: void <init>()>
120::<spec.harness.Util: long getTimeProperty(java.lang.String,java.lang.String)>
121::<spec.harness.Util: long getTimeAsMillis(java.lang.String)>
122::<spec.harness.Util: long getTimeAsSeconds(java.lang.String)>
123::<spec.harness.Util: int getHwtCalcProperty(java.lang.String,java.lang.String)>
124::<spec.harness.Util: boolean getBoolProperty(java.lang.String,java.lang.String)>
125::<spec.harness.Util: int getIntProperty(java.lang.String,java.lang.String)>
126::<spec.harness.Util: long getLongProperty(java.lang.String,java.lang.String)>
127::<spec.harness.Util: java.lang.String getPropertyHelper(java.util.Properties,java.lang.String,java.lang.String)>
128::<spec.harness.Util: java.lang.String getProperty(java.lang.String,java.lang.String)>
129::<spec.harness.Util: java.lang.String getDefaultProperty(java.lang.String,java.lang.String)>
130::<spec.harness.Util: java.lang.String getUserProperty(java.lang.String,java.lang.String)>
131::<spec.harness.Util: void printProperties(java.util.Properties)>
132::<spec.harness.Util: void printProperties(java.io.PrintStream,java.util.Properties)>
133::<spec.harness.Util: void printReqs(java.util.HashMap)>
134::<spec.harness.Util: void printProperties(java.io.PrintStream,java.util.HashMap)>
135::<spec.harness.Util: boolean sleep(long)>
136::<spec.harness.Util: boolean isScimarkAndNotMonteCarlo(java.lang.String)>
137::<spec.harness.Util: java.lang.String getNextRawFileInDir()>
138::<spec.harness.Util: boolean createDir(java.io.File)>
139::<spec.harness.Util: java.lang.String getNextRawFileInDir(java.io.File)>
140::<spec.harness.Util: boolean isBenchmark(java.lang.String)>
141::<spec.harness.Util: java.lang.String[] parseDefaultJvmArgs()>
142::<spec.harness.Util: java.lang.String getSizeFromHeapArg(java.lang.String)>
143::<spec.harness.KnownIssues: void <init>()>
144::<spec.harness.KnownIssues: void printKnownIssuesInfo()>
145::<spec.harness.KnownIssues: void printKnownIssueXmlTransformRace()>
146::<spec.harness.KnownIssues: void printKnownIssueJavacVersion()>
147::<spec.harness.KnownIssues: void printKnownIssueutOfMemoryError()>
148::<spec.harness.KnownIssues: void <clinit>()>
149::<spec.benchmarks.serial.Main$1: void <init>()>
150::<spec.reporter.ReportGenerator: void <init>(java.lang.String,boolean,boolean,boolean,boolean)>
151::<spec.reporter.ReportGenerator: void handleBenchmarksResults(org.w3c.dom.Node)>
152::<spec.reporter.ReportGenerator: void collectBmConfiguration(spec.reporter.BenchmarkRecord,org.w3c.dom.NamedNodeMap)>
153::<spec.reporter.ReportGenerator: void handleBenchmarkResult(org.w3c.dom.Node)>
154::<spec.reporter.ReportGenerator: void generateHat(spec.reporter.Writer,java.lang.String,java.lang.String,java.lang.String)>
155::<spec.reporter.ReportGenerator: void generateSummaryTable(spec.reporter.Writer,java.lang.String)>
156::<spec.reporter.ReportGenerator: void generateConfigTable(spec.reporter.Writer)>
157::<spec.reporter.ReportGenerator: java.util.ArrayList findProperties(java.lang.String,java.lang.String)>
158::<spec.reporter.ReportGenerator: void generateViolationsTable(spec.reporter.Writer)>
159::<spec.reporter.ReportGenerator: void generateDetailsTable(spec.reporter.Writer)>
160::<spec.reporter.ReportGenerator: void generateCopyRightStatement(spec.reporter.Writer)>
161::<spec.reporter.ReportGenerator: java.lang.String generateReport()>
162::<spec.reporter.ReportGenerator: void generateInfoTable(org.w3c.dom.Node,spec.reporter.Writer,java.lang.String[])>
163::<spec.reporter.ReportGenerator: java.lang.String insertBRTag(java.lang.String,spec.reporter.Writer)>
164::<spec.reporter.ReportGenerator: void handleIterationResult(spec.reporter.BenchmarkRecord,spec.reporter.BenchmarkChart,org.w3c.dom.Node)>
165::<spec.reporter.ReportGenerator: boolean checkName(java.lang.String,org.w3c.dom.Node)>
166::<spec.reporter.ReportGenerator: void handleLoopsNode(spec.reporter.BenchmarkRecord$IterationRecord,spec.reporter.BenchmarkChart,org.w3c.dom.Node)>
167::<spec.reporter.ReportGenerator: void checkErrors(spec.reporter.BenchmarkRecord$IterationRecord,org.w3c.dom.Node)>
168::<spec.reporter.ReportGenerator: void createSummary(java.lang.String,java.lang.String,java.lang.String)>
169::<spec.reporter.ReportGenerator: void printConstantProp(java.io.PrintStream,java.lang.String)>
170::<spec.reporter.ReportGenerator: void printConstantProp(java.io.PrintStream,java.lang.String,java.lang.String)>
171::<spec.reporter.ReportGenerator: void createSubFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
172::<spec.reporter.ReportGenerator: void handleAnalyzersNode(spec.reporter.BenchmarkChart,org.w3c.dom.Node)>
173::<spec.reporter.ReportGenerator: boolean isCompliantRun()>
174::<spec.reporter.ReportGenerator: void insertSuiteConfiguration(spec.reporter.Writer)>
175::<spec.reporter.ReportGenerator: java.lang.String main2(java.lang.String[])>
176::<spec.reporter.ReportGenerator: void main(java.lang.String[])>
177::<spec.reporter.ReportGenerator: void <clinit>()>
178::<spec.harness.Context: void <init>()>
179::<spec.harness.Context: java.io.PrintStream getOut()>
180::<spec.harness.Context: void setOut(java.io.PrintStream)>
181::<spec.harness.Context: java.lang.String getResourceDirFor(java.lang.Class)>
182::<spec.harness.Context: java.lang.String staticToString()>
183::<spec.harness.Context: void closeXmlResultFile()>
184::<spec.harness.Context: void <clinit>()>
185::<spec.harness.analyzer.CallbackAnalyzerExample: void <init>()>
186::<spec.harness.analyzer.CallbackAnalyzerExample: void setup()>
187::<spec.harness.analyzer.CallbackAnalyzerExample: void tearDown()>
188::<spec.harness.analyzer.CallbackAnalyzerExample: void callbackMethod(int)>
189::<spec.benchmarks.serial.data.Child: void <init>()>
190::<spec.benchmarks.serial.data.Child: java.lang.String toString()>
191::<spec.harness.CommandLineParser: void <init>()>
192::<spec.harness.CommandLineParser: void usage(java.io.PrintStream)>
193::<spec.harness.CommandLineParser: void version(java.io.PrintStream)>
194::<spec.harness.CommandLineParser: boolean parseArgs(java.lang.String[],java.util.Properties)>
195::<spec.harness.analyzer.HeapMemoryFreeAnalyzer: void <init>()>
196::<spec.harness.analyzer.HeapMemoryFreeAnalyzer: void execute(long)>
197::<spec.harness.analyzer.HeapMemoryFreeAnalyzer$HeapMemoryFree: void <init>(long,long)>
198::<spec.harness.analyzer.HeapMemoryFreeAnalyzer$HeapMemoryFree: java.lang.String getName()>
199::<spec.harness.analyzer.HeapMemoryFreeAnalyzer$HeapMemoryFree: java.lang.String getUnit()>
200::<spec.io.FileCache: void <init>()>
201::<spec.io.FileCache: java.io.ByteArrayInputStream getStream(java.lang.String)>
202::<spec.io.FileCache: void discard(java.lang.String)>
203::<spec.io.FileCache: int getLength(java.lang.String)>
204::<spec.io.FileCache: void clearCache()>
205::<spec.io.FileCache: boolean hasFile(java.lang.String)>
206::<spec.io.FileCache: byte[] getByteArray(java.lang.String)>
207::<spec.io.FileCache: void loadFile(java.lang.String)>
208::<spec.harness.analyzer.HeapMemoryTotalAnalyzer: void <init>()>
209::<spec.harness.analyzer.HeapMemoryTotalAnalyzer: void execute(long)>
210::<spec.reporter.BenchmarkGroupRecords$BenchmarkGroupRecord: void <init>(spec.reporter.BenchmarkRecord)>
211::<spec.reporter.BenchmarkGroupRecords$BenchmarkGroupRecord: void <init>(java.lang.String)>
212::<spec.reporter.BenchmarkGroupRecords$BenchmarkGroupRecord: void addBenchmarkRecord(spec.reporter.BenchmarkRecord)>
213::<spec.reporter.BenchmarkGroupRecords$BenchmarkGroupRecord: double computeScore()>
214::<spec.benchmarks.serial.Utils: void <init>()>
215::<spec.benchmarks.serial.Utils: java.lang.Object getInstance(int)>
216::<spec.benchmarks.serial.Utils: java.util.BitSet createBitSet()>
217::<spec.benchmarks.serial.Utils: void printResult(java.io.PrintStream,java.util.BitSet)>
218::<spec.benchmarks.serial.Utils: java.lang.Object[] createInstances()>
219::<spec.reporter.Writer: void <init>(java.lang.String)>
220::<spec.reporter.Writer: void closeStream()>
221::<spec.reporter.Writer: spec.reporter.Writer getInstance(java.lang.String,java.lang.String)>
222::<spec.benchmarks.serial.data.TestParent: void <init>(int)>
223::<spec.benchmarks.serial.data.TestParent: void <init>(int,double,java.lang.String,spec.benchmarks.serial.data.Child,java.lang.String[],java.util.HashMap,java.lang.Long,boolean,byte,short,int,java.lang.Integer,long,java.lang.Long,float,double,char,java.util.Date,java.sql.Date)>
224::<spec.benchmarks.serial.data.TestParent: boolean equals(java.lang.Object)>
225::<spec.benchmarks.serial.data.TestParent: spec.benchmarks.serial.data.TestParent createTestInstance()>
226::<spec.benchmarks.serial.data.TestParent: java.lang.String toString()>
227::<spec.benchmarks.serial.data.TestByteArray: void <init>()>
228::<spec.benchmarks.serial.data.TestByteArray: spec.benchmarks.serial.data.TestByteArray createTestInstance()>
229::<spec.harness.results.IterationResult: void <init>()>
230::<spec.harness.results.IterationResult: boolean incNumberBmThreadsDone()>
231::<spec.harness.results.IterationResult: java.lang.String durDesc()>
232::<spec.harness.results.IterationResult: java.lang.String resultString(java.lang.String)>
233::<spec.harness.results.IterationResult: double getScore()>
234::<spec.harness.results.IterationResult: boolean isValid()>
235::<spec.harness.results.IterationResult: java.util.List getAllErrors(java.lang.String)>
236::<spec.harness.results.IterationResult: void toXml(java.io.PrintStream,int)>
237::<spec.reporter.BenchmarkRecord: void <init>(java.lang.String,int)>
238::<spec.reporter.BenchmarkRecord: spec.reporter.BenchmarkRecord$IterationRecord addIterationRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
239::<spec.reporter.BenchmarkRecord: void printAllRecordedInfo()>
240::<spec.reporter.BenchmarkRecord: boolean isValidRun()>
241::<spec.harness.Launch: void <init>()>
242::<spec.harness.Launch: void runBenchmarkSuite(java.util.Properties)>
243::<spec.harness.Launch: java.lang.String openResultFile(java.util.Properties)>
244::<spec.harness.Launch: void closeResultFile(java.lang.String)>
245::<spec.harness.Launch: void closeSubmissionFile(java.lang.String)>
246::<spec.harness.Launch: java.lang.String createReport(java.lang.String)>
247::<spec.harness.Launch: java.lang.String createReport(java.lang.String[])>
248::<spec.harness.Launch: spec.harness.results.BenchmarkResult runOneBenchmark(java.lang.String,int,int,int)>
249::<spec.harness.Launch: java.lang.String checkBenchmarkKit()>
250::<spec.harness.Launch: void setupContext()>
251::<spec.harness.Launch: boolean setupSimple(java.lang.String[])>
252::<spec.harness.Launch: void main(java.lang.String[])>
253::<spec.harness.Launch: void <clinit>()>
254::<spec.benchmarks.serial.data.TestWithFinalField: void <init>()>
255::<spec.benchmarks.serial.data.TestWithFinalField: spec.benchmarks.serial.data.TestWithFinalField createTestInstance()>
256::<spec.harness.VMVersionTest: void <init>()>
257::<spec.harness.VMVersionTest: java.lang.String getVersionInfo()>
258::<spec.harness.VMVersionTest: void main(java.lang.String[])>
259::<spec.benchmarks.serial.data.TestClassWithSQLDateOnly: void <init>()>
260::<spec.benchmarks.serial.data.TestClassWithSQLDateOnly: java.lang.String toString()>
261::<spec.benchmarks.serial.data.TestClassWithSQLDateOnly: spec.benchmarks.serial.data.TestClassWithSQLDateOnly createTestInstance()>
262::<spec.benchmarks.serial.data.TestClassWithSQLDateOnly: boolean equals(java.lang.Object)>
263::<spec.harness.analyzer.CallbackAnalyzerExample$TheNumberGenerator: void <init>()>
264::<spec.harness.analyzer.CallbackAnalyzerExample$TheNumberGenerator: void register(spec.harness.analyzer.CallbackAnalyzerExample)>
265::<spec.harness.analyzer.CallbackAnalyzerExample$TheNumberGenerator: void deregister(spec.harness.analyzer.CallbackAnalyzerExample)>
266::<spec.harness.analyzer.CallbackAnalyzerExample$TheNumberGenerator: void run()>
267::<spec.harness.analyzer.CallbackAnalyzerExample$TheNumberGenerator: void <clinit>()>
268::<spec.harness.analyzer.PowerMeter: void <init>(java.lang.String,int)>
269::<spec.harness.analyzer.PowerMeter: int writeMeter(java.lang.String)>
270::<spec.harness.analyzer.PowerMeter: java.lang.String readMeter()>
271::<spec.harness.analyzer.PowerMeter: void endSocConnection()>
272::<spec.harness.analyzer.PowerMeter: void startRun(int,int,int)>
273::<spec.harness.analyzer.PowerMeter: void go()>
274::<spec.harness.analyzer.PowerMeter: void stop()>
275::<spec.harness.analyzer.PowerMeter: java.util.HashMap reportRun(java.lang.String)>
276::<spec.harness.analyzer.PowerMeter: java.lang.Boolean meterCompliant()>
277::<spec.harness.analyzer.PowerMeter: java.lang.String meterPtdVersion()>
278::<spec.harness.analyzer.PowerMeter: java.lang.String meterPtdHostOs()>
279::<spec.harness.analyzer.PowerMeter: java.lang.String meterPtdMode()>
280::<spec.harness.analyzer.PowerMeter: void <clinit>()>
281::<spec.benchmarks.serial.data.Handler: void <init>(int,java.lang.Object)>
282::<spec.benchmarks.serial.data.Handler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>
283::<spec.benchmarks.serial.data.TestArrayList: void <init>()>
284::<spec.benchmarks.serial.data.TestArrayList: spec.benchmarks.serial.data.TestArrayList createTestInstance()>
285::<spec.benchmarks.serial.data.TestArrayList: boolean equals(java.lang.Object)>
286::<spec.harness.analyzer.AnalyzerResult: void <init>(double)>
287::<spec.harness.analyzer.AnalyzerResult: java.lang.String getDescription()>
288::<spec.benchmarks.serial.data.TestBigInteger: void <init>()>
289::<spec.benchmarks.serial.data.TestBigInteger: spec.benchmarks.serial.data.TestBigInteger createTestInstance()>
290::<spec.benchmarks.serial.data.TestBigInteger: boolean equals(java.lang.Object)>
291::<spec.harness.StopBenchmarkException: void <init>(java.lang.String)>
292::<spec.harness.StopBenchmarkException: void <init>(java.lang.String,java.lang.Throwable)>
293::<spec.reporter.PlainWriter: void <init>(java.lang.String)>
294::<spec.reporter.PlainWriter: void handleIterRecord(spec.reporter.BenchmarkRecord)>
295::<spec.reporter.PlainWriter: void handleBenchmarkRecord(spec.reporter.BenchmarkRecord)>
296::<spec.reporter.PlainWriter: void insertRecord(java.lang.String,java.lang.String)>
297::<spec.reporter.PlainWriter: void putHat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
298::<spec.reporter.PlainWriter: void putSummaryTable(java.lang.String,java.util.TreeMap)>
299::<spec.reporter.PlainWriter: void startDetailsTable()>
300::<spec.reporter.PlainWriter: void insertRecords(java.util.ArrayList)>
301::<spec.benchmarks.serial.data.TestDomainObject: spec.benchmarks.serial.data.TestDomainObject createTestInstance()>
302::<spec.benchmarks.serial.data.TestDomainObject: void <init>()>
303::<spec.benchmarks.serial.data.TestDomainObject: void <init>(boolean)>
304::<spec.benchmarks.serial.data.TestDomainObject: boolean equals(java.lang.Object)>
305::<spec.benchmarks.serial.data.TestDomainObject: int hashCode()>
306::<spec.benchmarks.serial.data.TestDomainObject: void <clinit>()>
307::<spec.harness.analyzer.TempSensor: void <init>(java.lang.String,int)>
308::<spec.harness.analyzer.TempSensor: int writeMeter(java.lang.String)>
309::<spec.harness.analyzer.TempSensor: java.lang.String readMeter()>
310::<spec.harness.analyzer.TempSensor: void endSocConnection()>
311::<spec.harness.analyzer.TempSensor: void startRun(int,int,int)>
312::<spec.harness.analyzer.TempSensor: void go()>
313::<spec.harness.analyzer.TempSensor: void stop()>
314::<spec.harness.analyzer.TempSensor: java.util.HashMap reportRun(java.lang.String)>
315::<spec.harness.analyzer.TempSensor: java.lang.Boolean sensorCompliant()>
316::<spec.harness.analyzer.TempSensor: java.lang.String sensorPtdVersion()>
317::<spec.harness.analyzer.TempSensor: java.lang.String sensorPtdHostOs()>
318::<spec.harness.analyzer.TempSensor: java.lang.String sensorPtdMode()>
319::<spec.harness.analyzer.TempSensor: void <clinit>()>
320::<spec.benchmarks.serial.Main: void main(java.lang.String[])>
321::<spec.benchmarks.serial.Main: void <init>(spec.harness.results.BenchmarkResult,int)>
322::<spec.benchmarks.serial.Main: void harnessMain()>
323::<spec.benchmarks.serial.Main: void setupBenchmark()>
324::<spec.benchmarks.serial.Main: void serialize()>
325::<spec.benchmarks.serial.data.TestSimple: void <init>()>
326::<spec.benchmarks.serial.data.TestSimple: spec.benchmarks.serial.data.TestSimple createTestInstance()>
327::<spec.benchmarks.serial.data.TestSimple: boolean equals(java.lang.Object)>
328::<spec.benchmarks.serial.data.TestSimple: java.lang.String toString()>
329::<spec.harness.analyzer.AnalyzersRunner: void <init>(spec.harness.results.IterationResult,long)>
330::<spec.harness.analyzer.AnalyzersRunner: void run()>
331::<spec.harness.analyzer.AnalyzersRunner: boolean executeAnalyzers()>
332::<spec.harness.analyzer.AnalyzersRunner: void setupAnalyzerClasses(java.lang.String)>
333::<spec.harness.analyzer.AnalyzersRunner: void tearDownAnalyzerClasses()>
334::<spec.harness.analyzer.AnalyzersRunner: boolean internalSetupAnalyzers()>
335::<spec.harness.analyzer.AnalyzersRunner: void invokeStartMeasurementIntervalForAnalyzers()>
336::<spec.harness.analyzer.AnalyzersRunner: void invokeEndMeasurementIntervalForAnalyzers()>
337::<spec.harness.analyzer.AnalyzersRunner: void internalTearDownAnalyzers()>
338::<spec.harness.analyzer.AnalyzersRunner: void setupAnalyzers(spec.harness.results.IterationResult,long)>
339::<spec.harness.analyzer.AnalyzersRunner: void tearDownAnalyzers(spec.harness.results.IterationResult)>
340::<spec.harness.analyzer.AnalyzersRunner: void <clinit>()>
341::<spec.benchmarks.serial.data.TestArrayDouble: void <init>()>
342::<spec.benchmarks.serial.data.TestArrayDouble: spec.benchmarks.serial.data.TestArrayDouble createTestInstance()>
343::<spec.benchmarks.serial.data.TestArrayDouble: boolean equals(java.lang.Object)>
344::<spec.io.FileCache$CachedFile: void <init>(spec.io.FileCache,java.lang.String)>
345::<spec.io.FileCache$CachedFile: java.io.ByteArrayInputStream getStream()>
346::<spec.io.FileCache$CachedFile: void cache()>
347::<spec.io.FileCache$CachedFile: void discard()>
348::<spec.io.FileCache$CachedFile: org.xml.sax.InputSource asNewInputSource()>
349::<spec.io.FileCache$CachedFile: javax.xml.transform.stream.StreamSource asNewStreamSource()>
350::<spec.reporter.SPECSubmissionProcessor: void <init>()>
351::<spec.reporter.SPECSubmissionProcessor: void unzipFile(java.lang.String,java.lang.String)>
352::<spec.reporter.SPECSubmissionProcessor: java.lang.String getResultFile(java.lang.String,java.lang.String)>
353::<spec.reporter.SPECSubmissionProcessor: void splitMergedRawFile(java.lang.String)>
354::<spec.reporter.SPECSubmissionProcessor: void createMergedSubFile()>
355::<spec.reporter.SPECSubmissionProcessor: void createResultFile(java.util.Properties)>
356::<spec.reporter.SPECSubmissionProcessor: void main(java.lang.String[])>
357::<spec.reporter.SPECSubmissionProcessor: void <clinit>()>
358::<spec.harness.Context$1: void <init>()>
359::<spec.harness.BenchmarkThread: void <init>(spec.harness.results.BenchmarkResult,int)>
360::<spec.harness.BenchmarkThread: java.lang.String[] getArgs()>
361::<spec.harness.BenchmarkThread: void run()>
362::<spec.harness.BenchmarkThread: boolean executeIteration()>
363::<spec.harness.BenchmarkThread: spec.harness.results.LoopResult runLoop(spec.harness.results.IterationResult)>
364::<spec.reporter.SPECSubmissionPreparer: void <init>()>
365::<spec.reporter.SPECSubmissionPreparer: void prepareFiles(java.lang.String[])>
366::<spec.reporter.SPECSubmissionPreparer: java.lang.String mergeFiles(java.io.File[])>
367::<spec.reporter.SPECSubmissionPreparer: void zipFile(java.lang.String)>
368::<spec.reporter.SPECSubmissionPreparer: void main(java.lang.String[])>
369::<spec.harness.analyzer.PollingAnalyzerExample: void <init>()>
370::<spec.harness.analyzer.PollingAnalyzerExample: void execute(long)>
371::<spec.benchmarks.serial.data.TestArray: void <init>()>
372::<spec.benchmarks.serial.data.TestArray: spec.benchmarks.serial.data.TestArray createTestInstance()>
373::<spec.benchmarks.serial.data.TestArray: boolean equals(java.lang.Object)>
374::<spec.reporter.BenchmarkGroupRecords: void <init>()>
375::<spec.reporter.BenchmarkGroupRecords: void addNewBenchmarkRecord(spec.reporter.BenchmarkRecord)>
376::<spec.reporter.BenchmarkGroupRecords: double computeCompositeScore()>
377::<spec.reporter.BenchmarkGroupRecords: void updateGroupRecord(java.lang.String,spec.reporter.BenchmarkRecord)>
378::<spec.reporter.BenchmarkGroupRecords$BenchmarkResultsIterator: void <init>(spec.reporter.BenchmarkGroupRecords)>
379::<spec.reporter.BenchmarkGroupRecords$BenchmarkResultsIterator: spec.reporter.BenchmarkRecord next()>
380::<spec.harness.results.LoopResult: void <init>()>
381::<spec.harness.results.LoopResult: void toXml(java.io.PrintStream,int)>
382::<spec.harness.results.LoopResult: boolean isValid()>
383::<spec.harness.results.LoopResult: java.util.List getAllErrors(java.lang.String)>
384::<spec.harness.Constants: void <init>()>
385::<spec.reporter.ReportGenerator$Pair: void <init>(spec.reporter.ReportGenerator,java.lang.Object,java.lang.Object)>
386::<spec.harness.analyzer.AnalyzerBase: void <init>()>
387::<spec.harness.analyzer.AnalyzerBase: void report(spec.harness.analyzer.TYInfo)>
388::<spec.harness.analyzer.AnalyzerBase: void report(spec.harness.analyzer.AnalyzerResult)>
389::<spec.harness.analyzer.AnalyzerBase: boolean isTimedRun()>
390::<spec.harness.analyzer.AnalyzerBase: long getBenchmarkDuration()>
391::<spec.harness.analyzer.AnalyzerBase: java.lang.String getBenchmarkName()>
392::<spec.harness.analyzer.AnalyzerBase: long getNoOps()>
393::<spec.harness.analyzer.AnalyzerBase: void addError(java.lang.String)>
394::<spec.harness.analyzer.AnalyzerBase: void addErrorToSuiteResult(java.lang.String)>
395::<spec.harness.analyzer.AnalyzerBase: void addViolationToSuiteResult(java.lang.String)>
396::<spec.reporter.HTMLWriter: java.lang.String[] initIndents()>
397::<spec.reporter.HTMLWriter: void <init>(java.lang.String)>
398::<spec.reporter.HTMLWriter: void startTable(java.lang.String,boolean,boolean,boolean)>
399::<spec.reporter.HTMLWriter: void startTable(java.lang.String,boolean)>
400::<spec.reporter.HTMLWriter: void startTable(boolean)>
401::<spec.reporter.HTMLWriter: void insertImgData(java.lang.String,java.lang.String,int)>
402::<spec.reporter.HTMLWriter: void startDetailsTable()>
403::<spec.reporter.HTMLWriter: void insertData(java.lang.String)>
404::<spec.reporter.HTMLWriter: void insertData(java.lang.String,int)>
405::<spec.reporter.HTMLWriter: void insertRecord(java.lang.String,java.lang.String)>
406::<spec.reporter.HTMLWriter: void insertHeaderData(java.lang.String,java.lang.String,boolean,int,int,java.lang.String)>
407::<spec.reporter.HTMLWriter: void insertHeaderData(java.lang.String,java.lang.String,boolean,int,int)>
408::<spec.reporter.HTMLWriter: void insertHeaderRecord(java.lang.String,java.lang.String,boolean,int,int)>
409::<spec.reporter.HTMLWriter: void startRecord()>
410::<spec.reporter.HTMLWriter: void endRecord()>
411::<spec.reporter.HTMLWriter: void endAndStartRecord()>
412::<spec.reporter.HTMLWriter: void putColumnsSpec(int[])>
413::<spec.reporter.HTMLWriter: void putSummaryTable(java.lang.String,java.util.TreeMap)>
414::<spec.reporter.HTMLWriter: void putHat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
415::<spec.reporter.HTMLWriter: void endData()>
416::<spec.reporter.HTMLWriter: void startData()>
417::<spec.reporter.HTMLWriter: void startRecordAndData()>
418::<spec.reporter.HTMLWriter: void putTHEAD(boolean)>
419::<spec.reporter.HTMLWriter: void putTBODY(boolean)>
420::<spec.reporter.HTMLWriter: void putTABLE(boolean,java.lang.String)>
421::<spec.reporter.HTMLWriter: void endRecordAndData()>
422::<spec.reporter.HTMLWriter: void endAndStartRecordAndData()>
423::<spec.reporter.HTMLWriter: void endAndStartData()>
424::<spec.reporter.HTMLWriter: void endTable()>
425::<spec.reporter.HTMLWriter: void endTable(boolean)>
426::<spec.reporter.HTMLWriter: void putString(java.lang.String)>
427::<spec.reporter.HTMLWriter: void handleIterRecord(java.util.ArrayList,int)>
428::<spec.reporter.HTMLWriter: java.lang.String createConfRecord(java.lang.String[])>
429::<spec.reporter.HTMLWriter: void handleBenchmarkRecord(spec.reporter.BenchmarkRecord)>
430::<spec.reporter.HTMLWriter: java.lang.String insertBRTags(java.util.ArrayList)>
431::<spec.reporter.HTMLWriter: void insertRecords(java.util.ArrayList)>
432::<spec.reporter.HTMLWriter: void startReport()>
433::<spec.reporter.HTMLWriter: void endReport()>
434::<spec.harness.analyzer.CallbackAnalyzerExample$NumberResult: void <init>(double,java.lang.String,java.lang.String)>
435::<spec.harness.analyzer.TYInfo: void <init>(long,long)>
436::<spec.harness.analyzer.HeapMemoryTotalAnalyzer$HeapMemoryTotal: void <init>(long,long)>
437::<spec.harness.analyzer.HeapMemoryTotalAnalyzer$HeapMemoryTotal: java.lang.String getName()>
438::<spec.harness.analyzer.HeapMemoryTotalAnalyzer$HeapMemoryTotal: java.lang.String getUnit()>
439::<spec.benchmarks.serial.data.ProxiedClass: void <init>(int)>
440::<spec.benchmarks.serial.data.ProxiedClass: spec.benchmarks.serial.data.InterfaceForProxy createMyProxy(int,int)>
441::<spec.harness.analyzer.TempAnalyzer: void setupAnalyzerClass()>
442::<spec.harness.analyzer.TempAnalyzer: void tearDownAnalyzerClass()>
443::<spec.harness.analyzer.TempAnalyzer: void <init>()>
444::<spec.harness.analyzer.TempAnalyzer: void setup()>
445::<spec.harness.analyzer.TempAnalyzer: void startMeasurementInterval()>
446::<spec.harness.analyzer.TempAnalyzer: void endMeasurementInterval()>
447::<spec.harness.analyzer.TempAnalyzer: void tearDown()>
448::<spec.harness.results.TestResult: void <init>()>
449::<spec.harness.results.TestResult: void addError(java.lang.String)>
450::<spec.harness.results.TestResult: void printErrorsToXml(java.io.PrintStream,int)>
451::<spec.harness.results.TestResult: void ptxAttrib(java.io.PrintStream,int,java.lang.String,java.lang.String,boolean,java.lang.String)>
452::<spec.harness.results.TestResult: void ptxAttrib(java.io.PrintStream,int,java.lang.String,long,boolean,java.lang.String)>
453::<spec.harness.results.TestResult: void ptxAttrib(java.io.PrintStream,int,java.lang.String,double,boolean,java.lang.String)>
454::<spec.harness.results.TestResult: void ptxAttrib(java.io.PrintStream,int,java.lang.String,boolean,boolean,java.lang.String)>
455::<spec.harness.results.TestResult: void ptxAttrib(java.io.PrintStream,int,java.lang.String,java.lang.String[],boolean,java.lang.String)>
456::<spec.harness.results.TestResult: void ptxElement(java.io.PrintStream,int,java.lang.String,java.lang.String)>
457::<spec.harness.results.TestResult: void ptxElementOpen(java.io.PrintStream,int,java.lang.String)>
458::<spec.harness.results.TestResult: void ptxElementStartOpen(java.io.PrintStream,int,java.lang.String,boolean)>
459::<spec.harness.results.TestResult: void ptxElementClose(java.io.PrintStream,int,java.lang.String)>
460::<spec.harness.results.TestResult: java.lang.String ptxArrToValue(java.lang.String[])>
461::<spec.harness.results.TestResult: void ptxXmlHeader(java.io.PrintStream)>
462::<spec.harness.results.TestResult: java.lang.String doubleAsRes(double)>
463::<spec.harness.results.TestResult: java.lang.String millisAsSec(long)>
464::<spec.harness.results.TestResult: java.lang.String getIndent(int)>
465::<spec.harness.results.TestResult: java.lang.String correctContent(java.lang.String,boolean)>
466::<spec.harness.results.TestResult: void <clinit>()>
467::<spec.harness.results.SuiteResult: void <init>()>
468::<spec.harness.results.SuiteResult: void addJvmInfo(java.lang.String,java.util.Properties,java.lang.String)>
469::<spec.harness.results.SuiteResult: void addJvmInfo(java.lang.String,java.lang.String)>
470::<spec.harness.results.SuiteResult: void addRunInfo(java.lang.String,java.util.Properties,java.lang.String)>
471::<spec.harness.results.SuiteResult: void addSwInfo(java.lang.String,java.util.Properties,java.lang.String)>
472::<spec.harness.results.SuiteResult: void addHwInfo(java.lang.String,java.util.Properties,java.lang.String)>
473::<spec.harness.results.SuiteResult: void addViolation(java.lang.String)>
474::<spec.harness.results.SuiteResult: void addConfiguration(java.lang.String)>
475::<spec.harness.results.SuiteResult: boolean isValid()>
476::<spec.harness.results.SuiteResult: java.util.List getAllErrors(java.lang.String)>
477::<spec.harness.results.SuiteResult: void headerToXml(java.io.PrintStream,int)>
478::<spec.harness.results.SuiteResult: void toXml(java.io.PrintStream,int)>
479::<spec.harness.results.SuiteResult: void footerToXml(java.io.PrintStream,int)>
480::<spec.harness.results.SuiteResult: java.lang.String getCommandLineOptions()>
481::<spec.benchmarks.serial.data.TestProxy: void <init>()>
482::<spec.benchmarks.serial.data.TestProxy: spec.benchmarks.serial.data.TestProxy createTestInstance()>
483::<spec.reporter.Reporter: void <init>()>
484::<spec.reporter.Reporter: void usage()>
485::<spec.reporter.Reporter: java.lang.String main2(java.lang.String[])>
486::<spec.reporter.Reporter: void main(java.lang.String[])>
487::<spec.harness.results.BenchmarkResult: void <init>()>
488::<spec.harness.results.BenchmarkResult: void setIterationTime(long)>
489::<spec.harness.results.BenchmarkResult: java.lang.String durDesc()>
490::<spec.harness.results.BenchmarkResult: double getScore()>
491::<spec.harness.results.BenchmarkResult: java.lang.String resultString()>
492::<spec.harness.results.BenchmarkResult: boolean isValid()>
493::<spec.harness.results.BenchmarkResult: java.util.List getAllErrors(java.lang.String)>
494::<spec.harness.results.BenchmarkResult: void headerToXml(java.io.PrintStream,int)>
495::<spec.harness.results.BenchmarkResult: void toXml(java.io.PrintStream,int)>
496::<spec.harness.results.BenchmarkResult: void middleToXml(java.io.PrintStream,int)>
497::<spec.harness.results.BenchmarkResult: void footerToXml(java.io.PrintStream,int)>
