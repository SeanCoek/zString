0::<spec.io.ValidityCheckOutputStream: void <init>(java.lang.String)>
1::<spec.io.ValidityCheckOutputStream: void write(int)>
2::<spec.io.ValidityCheckOutputStream: boolean validityCheck(spec.harness.results.LoopResult)>
3::<spec.io.ValidityCheckOutputStream: void validityCheck2(spec.harness.results.LoopResult)>
4::<spec.io.ValidityCheckOutputStream: void handleValidationFailure(spec.harness.results.LoopResult,int,java.lang.String,java.lang.String)>
5::<spec.io.ValidityCheckOutputStream: java.lang.String getValidityFileName(java.lang.String)>
6::<spec.io.ValidityCheckOutputStream: void createValidityFile()>
7::<spec.io.ValidityCheckOutputStream: void <clinit>()>
8::<spec.io.FileCache$CachedFile: void <init>(spec.io.FileCache,java.lang.String)>
9::<spec.io.FileCache$CachedFile: java.io.ByteArrayInputStream getStream()>
10::<spec.io.FileCache$CachedFile: void cache()>
11::<spec.io.FileCache$CachedFile: void discard()>
12::<spec.io.FileCache$CachedFile: org.xml.sax.InputSource asNewInputSource()>
13::<spec.io.FileCache$CachedFile: javax.xml.transform.stream.StreamSource asNewStreamSource()>
14::<spec.io.FileCache: void <init>()>
15::<spec.io.FileCache: java.io.ByteArrayInputStream getStream(java.lang.String)>
16::<spec.io.FileCache: void discard(java.lang.String)>
17::<spec.io.FileCache: int getLength(java.lang.String)>
18::<spec.io.FileCache: void clearCache()>
19::<spec.io.FileCache: boolean hasFile(java.lang.String)>
20::<spec.io.FileCache: byte[] getByteArray(java.lang.String)>
21::<spec.io.FileCache: void loadFile(java.lang.String)>
22::<spec.benchmarks.check.subClass: void <init>()>
23::<spec.benchmarks.check.Super: void <init>(int)>
24::<spec.benchmarks.check.Super: java.lang.String toString()>
25::<spec.benchmarks.check.LoopBounds: void <init>()>
26::<spec.benchmarks.check.LoopBounds: int size()>
27::<spec.benchmarks.check.LoopBounds: int constraintAt(int)>
28::<spec.benchmarks.check.LoopBounds: void execute()>
29::<spec.benchmarks.check.LoopBounds: void main(java.lang.String[])>
30::<spec.benchmarks.check.LoopBounds: void run()>
31::<spec.benchmarks.check.Sub: void <init>(int)>
32::<spec.benchmarks.check.syncTest: void <init>()>
33::<spec.benchmarks.check.syncTest: int syncMethod2(int)>
34::<spec.benchmarks.check.syncTest: void main(java.lang.String[])>
35::<spec.benchmarks.check.superClass: void <init>()>
